<%- include("../../views/partial/admin/header") %>
   <link rel="stylesheet" href="../../public/admin/product.css">
    <!-- Product Management Section -->
    <div class="container-fluid py-4">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <div>
                <h1 class="h3">Product Management</h1>
                <p class="text-muted">Manage your product inventory</p>
            </div>
            <div>
                <a href="/admin/products/add" class="btn btn-primary">
                    <i class="fas fa-plus me-2"></i>Add New Product
                </a>
            </div>
        </div> 
        <!-- Search and Filter Bar -->
        <div class="card mb-4">
            <div class="card-body">
                <form action="/admin/products" method="get" class="row g-3" id="productFilterForm">
                    <div class="col-md-4">
                        <div class="input-group">
                            <span class="input-group-text bg-transparent border-end-0">
                                <i class="fas fa-search"></i>
                            </span>
                            <input type="text" class="form-control border-start-0 ps-0" placeholder="Search products..." name="search" value="<%= typeof search !== 'undefined' ? search : '' %>">
                            <button class="btn btn-primary" type="submit">Search</button>
                            <% if (search || status !== 'All' || stockstatus !== "All" || category || brand ) { %>
                                <a href="/admin/Products" class="btn btn-secondary">Clear</a>
                            <% } %>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <select class="form-select" id="categoryFilter" name="category">
                            <option value="">All Categories</option>
                            <% if (categories && categories.length > 0) { %>
                                <% categories.forEach(cate => { %>
                                    <option value="<%= cate._id %>" <%= category === cate._id.toString() ? 'selected' : '' %>><%= cate.name %></option>
                                <% }) %>
                            <% } %>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <select class="form-select" id="brandFilter" name="brand">
                            <option value="">All Brands</option>
                            <% if (brands && brands.length > 0) { %>
                                <% brands.forEach(bra => { %>
                                    <option value="<%= bra._id %>" <%= brand === bra._id.toString() ? 'selected' : '' %>><%= bra.brandName %></option>
                                <% }) %>
                            <% } %>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <select class="form-select" id="stockFilter" name="stockstatus">
                            <option value="All" <%= stockstatus === 'All' ? 'selected' : '' %>>Stocks</option>
                            <option value="Available" <%= stockstatus === 'Available' ? 'selected' : '' %>>Available</option>
                            <option value="out of stock" <%= stockstatus === 'out of stock' ? 'selected' : '' %>>Out of Stock</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <select class="form-select" id="statusFilter" name="status" >
                            <option value="All" <%= typeof status !== 'undefined' && status === 'All' ? 'selected' : '' %> >All Status</option>
                            <option value="Listed" <%= typeof status !== 'undefined' && status === 'Listed' ? 'selected' : '' %> >Active</option>
                            <option value="Unlisted" <%= typeof status !== 'undefined' && status === 'Unlisted' ? 'selected' : '' %> >Blocked</option>
                        </select>
                    </div>
                </form>
            </div>
        </div>
        
        <!-- Product Table -->
        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover align-middle product-table">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Image</th>
                                <th>Name</th>
                                <th>Category</th>
                                <th>Brand</th>
                                <th>Price(â‚¹)</th>
                                <th>Stock</th>
                                <th width="120">Status</th>
                                <th>Last Updated</th>  
                                <th width="150">Actions</th>
                            </tr>
                        </thead>
                        
                        <!-- In the table tbody -->
                        <tbody>
                            <% if(productData && productData.length > 0) { %>
                                <% for(let i = 0; i < productData.length; i++) { %>
                                    <tr>
                                        <td><%= (page-1) * limit + i + 1 %></td>
                                        <td>
                                            <img src="/uploads/products/<%= productData[i].cardImage %>" alt="<%= productData[i].productName %>" class="table-img">
                                        </td>
                                        <td class="fw-medium">
                                            <%= productData[i].productName %>
                                            <% if(productData[i].productOffer > 0) { %>
                                                <span class="badge bg-success ms-1"><%= productData[i].productOffer %>% OFF</span>
                                            <% } %>
                                        </td>
                                        <td><%= productData[i].category.name %></td>
                                        <td><%= productData[i].brand.brandName %></td>
                                        <td>
                                            <% if(productData[i].salePrice < productData[i].regularPrice) { %>
                                                <span class="text-decoration-line-through text-muted me-1"><%= productData[i].regularPrice %></span>
                                                <span class="fw-bold"><%= productData[i].salePrice %></span>
                                            <% } else { %>
                                                <span class="fw-bold"><%= productData[i].salePrice %></span>
                                            <% } %>
                                        </td>
                                        <td class="<%= productData[i].quantity <= 5 ? 'text-danger fw-bold' : '' %>">
                                            <%= productData[i].quantity %>
                                        </td>
                                        <td>
                                            <button class="btn btn-sm status-btn <%= productData[i].isListed ? 'bg-success' : 'bg-danger' %> text-white"
                                                data-bs-toggle="modal"
                                                data-bs-target="#statusModal"
                                                data-status="<%= productData[i].isListed ? 'Listed' : 'Unlisted' %>"
                                                data-name="<%= productData[i].productName %>"
                                                data-id="<%= productData[i]._id %>"
                                                aria-label="Toggle status for <%= productData[i].productName %>">
                                                <span class="status-text"><%= productData[i].isListed ? 'Listed' : 'Unlisted' %></span>
                                                <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                                            </button>  
                                        </td>
                                        <td>
                                            <%= new Date(productData[i].updatedAt).toLocaleString('en-US', {year: 'numeric', month: 'short', day: 'numeric',  }) %>                                                                    
                                        </td>  
                                        <td>
                                            <div class="d-flex gap-2">
                                                <a href="/admin/products/view/<%= productData[i]._id %>" class="btn btn-sm btn-outline-info" title="View details">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                                <a href="/admin/products/edit/<%= productData[i]._id %>" class="btn btn-sm btn-outline-primary" title="Edit product">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                                <button class="btn btn-sm btn-outline-danger delete-btn"
                                                        data-bs-toggle="modal" 
                                                        data-bs-target="#deleteModal"
                                                        data-id="<%= productData[i]._id %>"
                                                        data-name="<%= productData[i].productName %>" 
                                                        title="Delete product">
                                                    <i class="fas fa-trash-alt"></i>
                                                </button>
                                            </div>
                                        </td>
                                     </tr>
                                <% } %>
                            <% } else { %>
                                <tr>
                                    <td colspan="10" class="text-center py-4">No products found</td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>
                <!-- Pagination -->
                <% if (productData && productData.length > 0) { %>
                    <div class="d-flex justify-content-between align-items-center mt-4">
                        <div class="text-muted">
                            Showing <span class="fw-bold"><%= (page - 1) * limit + 1 %></span> to <span class="fw-bold"><%= Math.min(page * limit, count) %></span> of <span class="fw-bold"><%= count %></span> Products
                        </div>
                        <nav aria-label="Page navigation">
                            <ul class="pagination mb-0">
                                <!-- back Button -->
                                <li class="page-item <%= page <= 1 ? 'disabled' : '' %>">
                                    <a class="page-link" 
                                       href="<%= page <= 1 ? '#' : `/admin/products?page=${page - 1}${search ? '&search=' + encodeURIComponent(search) : ''}${category ? '&category=' + category : ''}${brand ? '&brand=' + brand : ''}${status !== 'All' ? '&status=' + status : ''}${stockstatus !== 'All' ? '&stockstatus=' + stockstatus : ''}` %>"
                                       aria-label="Previous"><i class="fas fa-chevron-left"></i>
                                    </a>
                                </li>
                                <% 
                                    const totalPages = Math.ceil(count / limit);
                                    const maxPagesToShow = 5;
                                    const startPage = Math.max(1, page - Math.floor(maxPagesToShow / 2));
                                    const endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);
                
                                    for (let i = startPage; i <= endPage; i++) { 
                                %>
                                    <li class="page-item <%= page === i ? 'active' : '' %>">
                                        <a class="page-link" href="/admin/products?page=<%= i %><%= search ? '&search=' + encodeURIComponent(search) : '' %><%= category ? '&category=' + category : '' %><%= brand ? '&brand=' + brand : '' %><%= status !== 'All' ? '&status=' + status : '' %><%= stockstatus !== 'All' ? '&stockstatus=' +stockstatus : '' %>">
                                            <%= i %>
                                        </a>
                                    </li>
                                <% } %>
                
                                <!-- Next Button -->
                                <li class="page-item <%= page >= totalPages ? 'disabled' : '' %>">
                                    <a class="page-link" 
                                       href="<%= page >= totalPages ? '#' : `/admin/products?page=${page + 1}${search ? '&search=' + encodeURIComponent(search) : ''}${category ? '&category=' + category : ''}${brand ? '&brand=' + brand : ''}${status !== 'All' ? '&status=' + status : ''}${stockstatus !== 'All' ? '&stockstatus=' + stockstatus : ''}` %>"
                                       aria-label="Next">
                                        <i class="fas fa-chevron-right"></i>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                <% } %>
            </div>
        </div>
    </div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Delete Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p id="deleteMessage"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
            </div>
        </div>
    </div>
</div>

<!-- Status Confirmation Modal -->
<div class="modal fade" id="statusModal" tabindex="-1" aria-labelledby="statusModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="statusModalLabel">Change Product Status</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p id="statusMessage"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirmStatus">Confirm</button>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {

        const filterForm = document.getElementById("productFilterForm"); 
        document.querySelectorAll('#categoryFilter, #brandFilter, #stockFilter, #statusFilter').forEach(filter => {
            filter.addEventListener('change', function () {
                filterForm.submit();
            });
        });
     
        const statusModal = document.getElementById('statusModal');
        let currentProductid = '';

        statusModal.addEventListener("show.bs.modal", (event) => {
            const button = event.relatedTarget;
            currentProductid = button.getAttribute("data-id");
            const currentStatus = button.getAttribute('data-status');
            const productName= button.getAttribute('data-name');
            const newStatus = currentStatus === 'Listed' ? 'Unlisted' : 'Listed';

            document.getElementById('statusMessage').textContent =
                `Are you sure you want to change "${productName}" from ${currentStatus} to ${newStatus}?`;
            document.getElementById('confirmStatus').className = `btn ${newStatus === 'Listed' ? 'btn-success' : 'btn-danger'}`;
        });

        document.getElementById("confirmStatus").addEventListener("click", async () => {
            try {
                const response = await fetch(`/admin/products/toggle/${currentProductid}`, {
                    method: 'PATCH',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest',
                        'Content-Type': 'application/json'
                    }
                });

                const data = await response.json();

                if (data.success) {
                    const button = document.querySelector(`.status-btn[data-id="${currentProductid}"]`);
                    const statusText = button.querySelector('.status-text');

                    statusText.textContent = data.isListed ? 'Listed' : 'Unlisted';
                    button.classList.remove('bg-success', 'bg-danger');
                    button.classList.add(data.isListed ? 'bg-success' : 'bg-danger');

                    bootstrap.Modal.getInstance(statusModal).hide();

                    Swal.fire({
                        icon: 'success',
                        title: 'Status Updated',
                        text: data.message,
                        confirmButtonColor: '#3085d6'
                    });
                } else {
                    throw new Error(data.message);
                }
            } catch (error) {
                console.error('Toggle status error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message || 'Failed to update status',
                    confirmButtonColor: '#3085d6'
                });
            }
        });

        // Delete Product
        let currentProductId;
        document.querySelector('#deleteModal').addEventListener('show.bs.modal', (e) => {
            const button = e.relatedTarget;
            currentProductId = button.getAttribute("data-id");
            const productName = button.getAttribute('data-name');
            document.getElementById('deleteMessage').textContent = 
                `Are you sure you want to delete "${productName}"?`;
        });
        
        document.getElementById("confirmDelete").addEventListener("click", async () => {
            try {
   
                const response = await fetch(`/admin/products/delete/${currentProductId}`, { 
                    method: 'PATCH',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest',
                        'Content-Type': 'application/json'
                    }
                });

                console.log("response", response)
                
                const data = await response.json();
                
                if (data.success) {
                    document.querySelector(`.delete-btn[data-id="${currentProductId}"]`).closest('tr').remove();
                    // Close the delete modal
                    bootstrap.Modal.getInstance(document.getElementById('deleteModal')).hide();

                    // Check if the table is now empty
                    const tableBody = document.querySelector('.product-table tbody');
                    const currentPage = parseInt(document.querySelector('.page-item.active .page-link').textContent);

                    Swal.fire({
                        icon: 'success',
                        title: 'Product Deleted',
                        text: data.message,
                        confirmButtonColor: '#3085d6',
                        timer: 2000,
                        timerProgressBar: true,
                        didClose: () => {
                            // If table is empty and not on first page, go to previous page
                            if (tableBody.querySelectorAll('tr').length === 0 && currentPage > 1) {
                                window.location.href = `/admin/products?page=${currentPage - 1}`;
                            } else {
                                window.location.reload();
                            }
                        }
                    });
                } else {
                    throw new Error(data.message);

                }
            } catch (error) {
                console.error('Delete product error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message || 'Failed to delete product',
                    confirmButtonColor: '#3085d6'
                });
            }
        });

        // View Product Details
        document.querySelectorAll('.view-product-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                const productId = this.getAttribute('data-id');
                window.location.href = `/admin/products/view/${productId}`;
            });
        });

        // Status Modal - Load Product Status
        if (document.getElementById('statusModal')) {
            const statusModal = document.getElementById('statusModal');
            statusModal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget;
                const productId = button.getAttribute('data-id');
                const currentStatus = button.getAttribute('data-status');
                
                document.getElementById('productId').value = productId;
                document.getElementById('productStatus').value = currentStatus;
            });

            // Update Status
            document.getElementById('confirmStatus').addEventListener('click', async function() {
                const productId = document.getElementById('productId').value;
                const newStatus = document.getElementById('productStatus').value;
                
                try {
                    const response = await fetch(`/admin/products/status/${productId}`, {
                        method: 'PATCH',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ status: newStatus })
                    });
                    
                    const data = await response.json();
                    
                    if (data.success) {
                        bootstrap.Modal.getInstance(statusModal).hide();
                        
                        Swal.fire({
                            icon: 'success',
                            title: 'Status Updated',
                            text: 'Product status has been updated successfully',
                            confirmButtonColor: '#3085d6',
                            timer: 2000,
                            timerProgressBar: true,
                            didClose: () => {
                                window.location.reload();
                            }
                        });
                    } else {
                        throw new Error(data.message);
                    }
                } catch (error) {
                    console.error('Update status error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: error.message || 'Failed to update product status',
                        confirmButtonColor: '#3085d6'
                    });
                }
            });
        }
    });
</script>

<%- include("../../views/partial/admin/footer") %>