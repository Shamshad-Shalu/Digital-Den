<%- include("../../views/partial/admin/header") %>
<link rel="stylesheet" href="/public/admin/order.css">

<!-- Order Management Section -->
<div class="container-fluid py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3">Order Management</h1>
            <p class="text-muted">Track and manage customer orders</p>
        </div>
        <div>
            <button type="button" class="btn btn-primary" id="exportOrdersBtn">
                <i class="fas fa-file-export me-2"></i>Export Orders
            </button>
        </div>
    </div>

    <!-- Search and Filter Bar -->
    <div class="card mb-4">
        <div class="card-body">
            <form id="orderFilterForm" class="row g-3">
                <div class="col-md-4">
                    <div class="input-group">
                        <span class="input-group-text bg-transparent border-end-0">
                            <i class="fas fa-search"></i>
                        </span>
                        <input type="text" class="form-control border-start-0 ps-0" placeholder="Search by Order ID or Username..." name="search" id="searchInput" value="<%= typeof search !== 'undefined' ? search : '' %>">
                        <button class="btn btn-primary" type="submit">Search</button>
                        <% if (search || orderStatus !== 'All' || paymentStatus !== 'All' || dateRange !== 'All') { %>
                            <button type="button" class="btn btn-secondary" id="clearFilters">Clear</button>
                        <% } %>
                    </div>
                </div>
                <div class="col-md-2">
                    <select class="form-select" id="orderStatusFilter" name="orderStatus">
                        <option value="All" <%= orderStatus === 'All' ? 'selected' : '' %>>All Status</option>
                        <option value="Pending" <%= orderStatus === 'Pending' ? 'selected' : '' %>>Pending</option>
                        <option value="Processing" <%= orderStatus === 'Processing' ? 'selected' : '' %>>Processing</option>
                        <option value="Shipped" <%= orderStatus === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                        <option value="Out for Delivery" <%= orderStatus === 'Out for Delivery' ? 'selected' : '' %>>Out for Delivery</option>
                        <option value="Delivered" <%= orderStatus === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                        <option value="Cancelled" <%= orderStatus === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
                        <option value="Returned" <%= orderStatus === 'Returned' ? 'selected' : '' %>>Returned</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <select class="form-select" id="paymentStatusFilter" name="paymentStatus">
                        <option value="All" <%= paymentStatus === 'All' ? 'selected' : '' %>>Payment Status</option>
                        <option value="Paid" <%= paymentStatus === 'Paid' ? 'selected' : '' %>>Paid</option>
                        <option value="Pending" <%= paymentStatus === 'Pending' ? 'selected' : '' %>>Pending</option>
                        <option value="Failed" <%= paymentStatus === 'Failed' ? 'selected' : '' %> >Failed</option>
                        <option value="Refunded" <%= paymentStatus === 'Refunded' ? 'selected' : '' %> >Refunded</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <select class="form-select" id="dateFilter" name="dateRange">
                        <option value="All" <%= dateRange === 'All' ? 'selected' : '' %>>All Time</option>
                        <option value="Today"    <%= dateRange === 'Today' ? 'selected' : '' %>>Today</option>
                        <option value="Yesterday" <%=dateRange ==='Yesterday' ? 'selected' : '' %>>Yesterday</option>
                        <option value="Last7Days" <%= dateRange ==='Last7Days' ? 'selected' : ''%>>Last 7 Days</option>
                        <option value="Last30Days" <%= dateRange ==='Last30Days' ? 'selected' : '' %>>Last 30 Days</option>
                        <option value="ThisMonth" <%= dateRange ==='ThisMonth' ? 'selected' : '' %>>This Month</option>
                        <option value="LastMonth" <%= dateRange ==='LastMonth' ? 'selected' : '' %>>Last Month</option>
                    </select>
                </div>
            </form>
        </div>
    </div>

    <!-- Orders Table -->
    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover align-middle order-table">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Order ID</th>
                            <th>Date</th>
                            <th>Customer</th>
                            <th>Items</th>
                            <th>Total</th>
                            
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="ordersTableBody">
                        <!-- dynamically populated -->
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <div id="paginationSection" class="d-flex justify-content-between align-items-center mt-4">
                <!--  dynamically  -->
            </div>
        </div>
    </div>
</div>

<!-- Order Details Modal -->
<div class="modal fade" id="orderDetailsModal" tabindex="-1" aria-labelledby="orderDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="orderDetailsModalLabel">Order Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="orderDetailsBody">
                <!-- body -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="printOrderBtn">
                    <i class="fas fa-print me-2"></i>Print Order
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Status Confirmation Modal -->
<div class="modal fade" id="statusModal" tabindex="-1" aria-labelledby="statusModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="statusModalLabel">Change Order Status</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p id="statusMessage"></p>
                <div class="mb-3">
                    <label for="newStatus" class="form-label">New Status</label>
                    <select class="form-select" id="newStatus">
                        <option value="Pending">Pending</option>
                        <option value="Processing">Processing</option>
                        <option value="Shipped">Shipped</option>
                        <option value="Out for Delivery">Out for Delivery</option>
                        <option value="Delivered">Delivered</option>
                        <option value="Cancelled">Cancelled</option>
                        <option value="Returned">Returned</option>
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirmStatus">Confirm</button>
            </div>
        </div>
    </div>
</div>

<!-- Return Request Modal -->
<div class="modal fade" id="returnRequestModal" tabindex="-1" aria-labelledby="returnRequestModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="returnRequestModalLabel">Process Return Request</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="returnRequestBody">
                <!-- Content will be dynamically loaded via JavaScript -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="processReturnBtn">Process Return</button>
            </div>
        </div>
    </div>
</div>

<!-- Image Viewer Modal -->
<div class="modal fade" id="imageViewerModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Image Viewer</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center p-0">
                <img src="" id="modalImage" class="img-fluid">
            </div>
        </div>
    </div>
</div>







<!-- Return Request Modal -->
<div class="modal fade" id="returnRequestModal" tabindex="-1" aria-labelledby="returnRequestModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="returnRequestModalLabel">Process Return Request</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row mb-4">
                    <div class="col-md-8">
                        <h6>Return Request #RTN-2025032001</h6>
                        <p class="text-muted mb-0">Submitted on March 20, 2025 at 2:15 PM</p>
                    </div>
                    <div class="col-md-4 text-end">
                        <span class="badge bg-warning text-dark">Pending Review</span>
                    </div>
                </div>
                
                <div class="row mb-4">
                    <div class="col-md-6">
                        <div class="card h-100">
                            <div class="card-header">
                                <h6 class="mb-0">Order Information</h6>
                            </div>
                            <div class="card-body">
                                <p class="mb-1"><strong>Order ID:</strong> #ORD-2025032204</p>
                                <p class="mb-1"><strong>Purchase Date:</strong> March 20, 2025</p>
                                <p class="mb-1"><strong>Delivery Date:</strong> March 22, 2025</p>
                                <p class="mb-0"><strong>Amount:</strong> ₹6,799</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card h-100">
                            <div class="card-header">
                                <h6 class="mb-0">Customer Information</h6>
                            </div>
                            <div class="card-body">
                                <p class="mb-1"><strong>Name:</strong> Emma Wilson</p>
                                <p class="mb-1"><strong>Email:</strong> emma@example.com</p>
                                <p class="mb-1"><strong>Phone:</strong> +91 87654 32109</p>
                                <p class="mb-0"><strong>Previous Returns:</strong> None</p>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="card mb-4">
                    <div class="card-header">
                        <h6 class="mb-0">Return Item</h6>
                    </div>
                    <div class="card-body p-0">
                        <div class="table-responsive">
                            <table class="table mb-0">
                                <thead class="bg-light">
                                    <tr>
                                        <th>Product</th>
                                        <th class="text-center">Quantity</th>
                                        <th>Return Reason</th>
                                        <th class="text-end">Amount</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <img src="/uploads/products/wireless-headphones.jpg" alt="Wireless Headphones" class="me-3" style="width: 60px; height: 60px; object-fit: cover;">
                                                <div>
                                                    <h6 class="mb-0">Premium Wireless Headphones</h6>
                                                    <small class="text-muted">SKU: AUDIO-HDPH-01</small>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="text-center">1</td>
                                        <td>Product defective - right speaker not working</td>
                                        <td class="text-end">₹6,799</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                
                <div class="card mb-4">
                    <div class="card-header">
                        <h6 class="mb-0">Customer's Return Details</h6>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <label class="form-label">Reason for Return</label>
                            <p>The right speaker of the headphones is not working. I've tried connecting them to multiple devices but the issue persists. The left speaker works fine.</p>
                        </div>
                        <div class="mb-0">
                            <label class="form-label">Attached Evidence</label>
                            <div class="row g-2">
                                <div class="col-md-4">
                                    <div class="position-relative">
                                        <img src="/uploads/returns/evidence-1.jpg" alt="Evidence 1" class="img-thumbnail">
                                        <button class="btn btn-sm btn-light position-absolute top-0 end-0 m-1" data-bs-toggle="modal" data-bs-target="#imageViewerModal" data-img="/uploads/returns/evidence-1.jpg">
                                            <i class="fas fa-search-plus"></i>
                                        </button>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="position-relative">
                                        <img src="/uploads/returns/evidence-2.jpg" alt="Evidence 2" class="img-thumbnail">
                                        <button class="btn btn-sm btn-light position-absolute top-0 end-0 m-1" data-bs-toggle="modal" data-bs-target="#imageViewerModal" data-img="/uploads/returns/evidence-2.jpg">
                                            <i class="fas fa-search-plus"></i>
                                        </button>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="position-relative">
                                        <a href="/uploads/returns/evidence-video.mp4" class="btn btn-outline-primary w-100 h-100 d-flex flex-column align-items-center justify-content-center" target="_blank">
                                            <i class="fas fa-video mb-2"></i>
                                            <span>Video Evidence</span>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="card">
                    <div class="card-header">
                        <h6 class="mb-0">Return Action</h6>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <label for="returnStatus" class="form-label">Return Status</label>
                            <select class="form-select" id="returnStatus">
                                <option value="approved">Approve Return</option>
                                <option value="rejected">Reject Return</option>
                                <option value="more_info">Request More Information</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="refundMethod" class="form-label">Refund Method (if approved)</label>
                            <select class="form-select" id="refundMethod">
                                <option value="original">Original Payment Method</option>
                                <option value="wallet">Store Wallet</option>
                                <option value="exchange">Product Exchange</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="returnNote" class="form-label">Note to Customer</label>
                            <textarea class="form-control" id="returnNote" rows="3" placeholder="Enter note to customer..."></textarea>
                        </div>
                        <div class="mb-3">
                            <label for="internalNote" class="form-label">Internal Note</label>
                            <textarea class="form-control" id="internalNote" rows="2" placeholder="Enter internal note..."></textarea>
                        </div>
                        <div class="form-check mb-0">
                            <input class="form-check-input" type="checkbox" id="sendNotification" checked>
                            <label class="form-check-label" for="sendNotification">
                                Send email notification to customer
                            </label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="processReturnBtn">Process Return</button>
            </div>
        </div>
    </div>
</div>




<!-- JavaScript for Order Management -->
<script>
    // Helper function to get status color class (moved to the top)
    function getStatusColorClass(status) {
        switch(status) {
            case 'Pending':
                return 'bg-warning';
            case 'Processing':
                return 'bg-primary';
            case 'Shipped':
                return 'bg-info';
            case 'Out for Delivery':
                return 'bg-purple';
            case 'Delivered':
                return 'bg-success';
            case 'Cancelled':
                return 'bg-danger';
            case 'Returned':
            case 'Return Request':
                return 'bg-secondary';
            default:
                return 'bg-light';
        }
    }
    
    // 
    async function fetchOrders(page = 1) {
        const search = document.getElementById('searchInput').value;
        const orderStatus = document.getElementById('orderStatusFilter').value;
        const paymentStatus = document.getElementById('paymentStatusFilter').value;
        const dateRange = document.getElementById('dateFilter').value;
    
        const queryParams = new URLSearchParams({
            page,
            search,
            orderStatus,
            paymentStatus,
            dateRange,
        }).toString();
    
        try {
            const response = await fetch(`/admin/orders?${queryParams}`, {
                headers: {
                    'X-Requested-With': 'XMLHttpRequest',
                },
            });
    
            if (response.status === 401 || response.status === 403) {
                Swal.fire({
                    icon: 'error',
                    title: 'Unauthorized',
                    text: 'Please log in to continue',
                }).then(() => {
                    window.location.href = '/admin/login';
                });
                return;
            }
    
            if (!response.ok) {
                const errorData = await response.json();
                throw new Error(errorData.message || 'Failed to fetch orders');
            }
    
            const data = await response.json();
    
            // Update table body
            const ordersTableBody = document.getElementById('ordersTableBody');
            ordersTableBody.innerHTML = '';
            if (data.orders && data.orders.length > 0) {
                data.orders.forEach((order, index) => {
                    const row = `
                        <tr>
                            <td>${(data.page - 1) * data.limit + index + 1}</td>
                            <td>
                                <span class="fw-medium">#${order.orderId}</span>
                                ${order.status === 'Return Request' ? '<span class="badge bg-warning text-dark ms-1">Return Request</span>' : ''}
                            </td>
                            <td>${new Date(order.createdAt).toLocaleDateString()}</td>
                            <td>
                                <div class="d-flex align-items-center">
                                    <div>
                                        <div class="fw-medium">${order.customer.name}</div>
                                        <div class="text-muted small">${order.customer.email}</div>
                                    </div>
                                </div>
                            </td>
                            <td>${order.orderedItems.length} items</td>
                            <td>
                                <span class="fw-bold">₹${order.finalAmount.toLocaleString('en-IN')}</span>
                            </td>
                        
                            <td>
                                <button class="btn btn-sm status-btn ${getStatusColorClass(order.status)} text-white"
                                    data-bs-toggle="modal"
                                    data-bs-target="#statusModal"
                                    data-status="${order.status}"
                                    data-id="${order.orderId}"
                                    aria-label="Change status for order ${order.orderId}">
                                    <span class="status-text">${order.status}</span>
                                    <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                                </button>
                            </td>
                            <td>
                                <div class="d-flex gap-2">
                                    <button class="btn btn-sm btn-outline-info view-order-btn" data-order-id="${order.orderId}" title="View order details">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    ${order.status === 'Return Request' ? `
                                        <button class="btn btn-sm btn-outline-warning return-request-btn" data-order-id="${order.orderId}" data-return-id="${order._id}" data-bs-toggle="modal" data-bs-target="#returnRequestModal" title="Process return request">
                                            <i class="fas fa-undo-alt"></i>
                                        </button>
                                    ` : ''}
                                </div>
                            </td>
                        </tr>
                    `;
                    ordersTableBody.insertAdjacentHTML('beforeend', row);
                });
            } else {
                ordersTableBody.innerHTML = '<tr><td colspan="9" class="text-center py-4">No orders found</td></tr>';
            }
    
            // Update pagination
            const paginationSection = document.getElementById('paginationSection');
            paginationSection.innerHTML = '';
            if (data.orders && data.orders.length > 0) {
                const totalPages = Math.ceil(data.count / data.limit);
                const maxPagesToShow = 5;
                const startPage = Math.max(1, data.page - Math.floor(maxPagesToShow / 2));
                const endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);
    
                const paginationHTML = `
                    <div class="text-muted">
                        Showing <span class="fw-bold">${(data.page - 1) * data.limit + 1}</span> to <span class="fw-bold">${Math.min(data.page * data.limit, data.count)}</span> of <span class="fw-bold">${data.count}</span> orders
                    </div>
                    <nav aria-label="Page navigation">
                        <ul class="pagination mb-0">
                            <li class="page-item ${data.page <= 1 ? 'disabled' : ''}">
                                <a class="page-link" href="#" data-page="${data.page - 1}" aria-label="Previous">
                                    <i class="fas fa-chevron-left"></i>
                                </a>
                            </li>
                            ${Array.from({ length: endPage - startPage + 1 }, (_, i) => startPage + i).map(i => `
                                <li class="page-item ${data.page === i ? 'active' : ''}">
                                    <a class="page-link" href="#" data-page="${i}">${i}</a>
                                </li>
                            `).join('')}
                            <li class="page-item ${data.page >= totalPages ? 'disabled' : ''}">
                                <a class="page-link" href="#" data-page="${data.page + 1}" aria-label="Next">
                                    <i class="fas fa-chevron-right"></i>
                                </a>
                            </li>
                        </ul>
                    </nav>
                `;
                paginationSection.innerHTML = paginationHTML;
    
                // Add event listeners to pagination links
                document.querySelectorAll('.pagination a[data-page]').forEach(link => {
                    link.addEventListener('click', (e) => {
                        e.preventDefault();
                        const page = parseInt(link.getAttribute('data-page'));
                        if (page > 0 && page <= totalPages) {
                            fetchOrders(page);
                        }
                    });
                });
            }
    
            // Reattach event listeners for view and return buttons
            attachEventListeners();
        } catch (error) {
            console.error('Error fetching orders:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: error.message || 'Failed to load orders',
            });
        }
    }
    
    // Function to attach event listeners to dynamically added buttons
    function attachEventListeners() {
        // View order details
        document.querySelectorAll('.view-order-btn').forEach(btn => {
            btn.addEventListener('click', async function() {
                const orderId = this.getAttribute('data-order-id');
                try {
                    const response = await fetch(`/admin/orders/details/${orderId}`);
                    const { order, customerStats } = await response.json();
    
                    if (!response.ok) {
                        throw new Error(order.message || 'Failed to fetch order details');
                    }
    
                    // Populate order details modal
                    document.getElementById('orderDetailsModalLabel').textContent = `Order #${order.orderId} Details`;
                    document.getElementById('orderDetailsBody').innerHTML = `
                        <div class="row">
                            <!-- Order Information -->
                            <div class="col-md-8">
                                <div class="card mb-4">
                                    <div class="card-header d-flex justify-content-between">
                                        <h5 class="mb-0">Order #${order.orderId}</h5>
                                        <span class="badge bg-${getStatusColorClass(order.status).split('-')[1]} text-dark">${order.status}</span>
                                    </div>
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <p class="mb-1 text-muted">Ordered on</p>
                                                <p class="fw-medium">${new Date(order.createdAt).toLocaleString()}</p>
                                            </div>
                                            <div class="col-md-6">
                                                <p class="mb-1 text-muted">Payment method</p>
                                                <p class="fw-medium">${order.paymentMethod}</p>
                                            </div>
                                        </div>
                                        <hr>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <p class="mb-1 text-muted">Shipping address</p>
                                                <address>
                                                    ${order.address.name}<br>
                                                    ${order.address.addressLine}<br>
                                                    ${order.address.landmark ? order.address.landmark + '<br>' : ''}
                                                    ${order.address.city}, ${order.address.pincode}<br>
                                                    ${order.address.state}, India<br>
                                                    +91 ${order.address.phone}
                                                </address>
                                            </div>
                                            <div class="col-md-6">
                                                <p class="mb-1 text-muted">Billing address</p>
                                                <address>
                                                    ${order.address.name}<br>
                                                    ${order.address.addressLine}<br>
                                                    ${order.address.landmark ? order.address.landmark + '<br>' : ''}
                                                    ${order.address.city}, ${order.address.pincode}<br>
                                                    ${order.address.state}, India<br>
                                                    +91 ${order.address.phone}
                                                </address>
                                            </div>
                                        </div>
                                    </div>
                                </div>
    
                                <!-- Order Items -->
                                <div class="card mb-4">
                                    <div class="card-header">
                                        <h5 class="mb-0">Order Items</h5>
                                    </div>
                                    <div class="card-body p-0">
                                        <div class="table-responsive">
                                            <table class="table mb-0">
                                                <thead class="bg-light">
                                                    <tr>
                                                        <th>Product</th>
                                                        <th class="text-center">Quantity</th>
                                                        <th class="text-end">Price</th>
                                                        <th class="text-end">Total</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    ${order.orderedItems.map(item => `
                                                        <tr>
                                                            <td>
                                                                <div class="d-flex align-items-center">
                                                                    <img src="/uploads/products/${item.product.cardImage}" alt="${item.product.productName}" class="me-3" style="width: 60px; height: 60px; object-fit: cover;">
                                                                    <div>
                                                                        <h6 class="mb-0">${item.product.productName}</h6>
                                                                        <small class="text-muted">SKU: ${item.product.sku || 'N/A'}</small>
                                                                    </div>
                                                                </div>
                                                            </td>
                                                            <td class="text-center">${item.quantity}</td>
                                                            <td class="text-end">₹${item.price.toLocaleString('en-IN')}</td>
                                                            <td class="text-end">₹${(item.quantity * item.price).toLocaleString('en-IN')}</td>
                                                        </tr>
                                                    `).join('')}
                                                </tbody>
                                                <tfoot class="bg-light">
                                                    <tr>
                                                        <td colspan="3" class="text-end fw-medium">Subtotal</td>
                                                        <td class="text-end">₹${order.totalPrice.toLocaleString('en-IN')}</td>
                                                    </tr>
                                                    <tr>
                                                        <td colspan="3" class="text-end fw-medium">Shipping</td>
                                                        <td class="text-end">₹${order.shipping.toLocaleString('en-IN')}</td>
                                                    </tr>
                                                    <tr>
                                                        <td colspan="3" class="text-end fw-medium">Tax (GST 5%)</td>
                                                        <td class="text-end">₹${order.tax.toLocaleString('en-IN')}</td>
                                                    </tr>
                                                    <tr>
                                                        <td colspan="3" class="text-end fw-bold">Total</td>
                                                        <td class="text-end fw-bold">₹${order.finalAmount.toLocaleString('en-IN')}</td>
                                                    </tr>
                                                </tfoot>
                                            </table>
                                        </div>
                                    </div>
                                </div>
    
                                <!-- Order Timeline -->
                                <div class="card">
                                    <div class="card-header">
                                        <h5 class="mb-0">Order Timeline</h5>
                                    </div>
                                    <div class="card-body">
                                        <ul class="timeline">
                                            <li class="timeline-item">
                                                <div class="timeline-marker bg-success"></div>
                                                <div class="timeline-content">
                                                    <h6 class="mb-0">Order Placed</h6>
                                                    <small class="text-muted">${new Date(order.createdAt).toLocaleString()}</small>
                                                    <p class="mt-2 mb-0">Order #${order.orderId} has been placed successfully.</p>
                                                </div>
                                            </li>
                                            <li class="timeline-item">
                                                <div class="timeline-marker bg-success"></div>
                                                <div class="timeline-content">
                                                    <h6 class="mb-0">Payment Confirmed</h6>
                                                    <small class="text-muted">${new Date(order.createdAt).toLocaleString()}</small>
                                                    <p class="mt-2 mb-0">Payment of ₹${order.finalAmount.toLocaleString('en-IN')} has been confirmed.</p>
                                                </div>
                                            </li>
                                            <li class="timeline-item">
                                                <div class="timeline-marker bg-${order.status !== 'Pending' ? 'success' : 'warning'}"></div>
                                                <div class="timeline-content">
                                                    <h6 class="mb-0">Order Processing</h6>
                                                    <small class="text-muted">${order.status === 'Pending' ? 'Pending' : new Date(order.updatedAt).toLocaleString()}</small>
                                                    <p class="mt-2 mb-0">${order.status === 'Pending' ? 'Your order is waiting to be processed.' : 'Order is being processed.'}</p>
                                                </div>
                                            </li>
                                            <li class="timeline-item">
                                                <div class="timeline-marker bg-${['Shipped', 'Out for Delivery', 'Delivered'].includes(order.status) ? 'success' : 'secondary'}"></div>
                                                <div class="timeline-content">
                                                    <h6 class="mb-0">Order Shipped</h6>
                                                    <small class="text-muted">${['Shipped', 'Out for Delivery', 'Delivered'].includes(order.status) ? new Date(order.updatedAt).toLocaleString() : 'Pending'}</small>
                                                </div>
                                            </li>
                                            <li class="timeline-item">
                                                <div class="timeline-marker bg-${['Out for Delivery', 'Delivered'].includes(order.status) ? 'success' : 'secondary'}"></div>
                                                <div class="timeline-content">
                                                    <h6 class="mb-0">Out for Delivery</h6>
                                                    <small class="text-muted">${['Out for Delivery', 'Delivered'].includes(order.status) ? new Date(order.updatedAt).toLocaleString() : 'Pending'}</small>
                                                </div>
                                            </li>
                                            <li class="timeline-item">
                                                <div class="timeline-marker bg-${order.status === 'Delivered' ? 'success' : 'secondary'}"></div>
                                                <div class="timeline-content">
                                                    <h6 class="mb-0">Delivered</h6>
                                                    <small class="text-muted">${order.status === 'Delivered' ? new Date(order.updatedAt).toLocaleString() : 'Pending'}</small>
                                                </div>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
    
                            <!-- Customer Information and Actions -->
                            <div class="col-md-4">
                                <!-- Customer Information -->
                                <div class="card mb-4">
                                    <div class="card-header">
                                        <h5 class="mb-0">Customer Information</h5>
                                    </div>
                                    <div class="card-body">
                                        <div class="mb-3">
                                            <h6 class="mb-0">${order.userId.username}</h6>
                                            <p class="text-muted mb-0">Customer since ${new Date(order.userId.createdAt).toLocaleDateString()}</p>
                                        </div>
                                        <div class="mb-3">
                                            <p class="mb-1"><i class="fas fa-envelope me-2 text-muted"></i> ${order.userId.email}</p>
                                            <p class="mb-1"><i class="fas fa-phone me-2 text-muted"></i> +91 ${order.userId.phone || order.address.phone}</p>
                                        </div>
                                        <hr>
                                        <div class="mb-0">
                                            <p class="mb-1 fw-medium">Customer Statistics</p>
                                            <div class="row g-2 text-center">
                                                <div class="col-4">
                                                    <div class="border rounded p-2">
                                                        <h6 class="mb-1">${customerStats.totalOrders}</h6>
                                                        <small class="text-muted">Orders</small>
                                                    </div>
                                                </div>
                                                <div class="col-4">
                                                    <div class="border rounded p-2">
                                                        <h6 class="mb-1">₹${customerStats.totalSpent.toLocaleString('en-IN')}</h6>
                                                        <small class="text-muted">Spent</small>
                                                    </div>
                                                </div>
                                                <div class="col-4">
                                                    <div class="border rounded p-2">
                                                        <h6 class="mb-1">${customerStats.totalReturns}</h6>
                                                        <small class="text-muted">Returns</small>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
    
                                <!-- Order Actions -->
                                <!-- Order Notes -->
                                
                            </div>
                        </div>
                    `;
    
                    const orderDetailsModal = new bootstrap.Modal(document.getElementById('orderDetailsModal'));
                    orderDetailsModal.show();
    
                    // Add event listener for cancel order
                    document.getElementById('cancelOrderBtn').addEventListener('click', async function() {
                        const orderId = this.getAttribute('data-order-id');
                        Swal.fire({
                            title: 'Are you sure?',
                            text: "You are about to cancel this order!",
                            icon: 'warning',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'Yes, cancel it!'
                        }).then(async (result) => {
                            if (result.isConfirmed) {
                                try {
                                    const response = await fetch(`/admin/orders/update-status/${orderId}`, {
                                        method: 'POST',
                                        headers: { 'Content-Type': 'application/json' },
                                        body: JSON.stringify({ status: 'Cancelled' }),
                                    });
                                    const data = await response.json();
                                    if (data.success) {
                                        Swal.fire(
                                            'Cancelled!',
                                            'The order has been cancelled.',
                                            'success'
                                        ).then(() => {
                                            fetchOrders(data.page);
                                        });
                                    } else {
                                        Swal.fire(
                                            'Error!',
                                            data.message || 'Failed to cancel order',
                                            'error'
                                        );
                                    }
                                } catch (error) {
                                    Swal.fire(
                                        'Error!',
                                        'Server error while cancelling order',
                                        'error'
                                    );
                                }
                            }
                        });
                    });
    
                } catch (error) {
                    console.error('Error fetching order details:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Failed to load order details',
                    });
                }
            });
        });
    
        // Status change handling
        const statusModal = document.getElementById('statusModal');
        let currentOrderId = '';
    
        statusModal.addEventListener("show.bs.modal", (event) => {
            const button = event.relatedTarget;
            currentOrderId = button.getAttribute("data-id");
            const currentStatus = button.getAttribute('data-status');
            document.getElementById('statusMessage').textContent =
                `Are you sure you want to change the status of order #${currentOrderId} from ${currentStatus}?`;
            document.getElementById('newStatus').value = currentStatus;
        });
    
        document.getElementById("confirmStatus").addEventListener("click", async () => {
            const newStatus = document.getElementById('newStatus').value;
    
            try {
                const response = await fetch(`/admin/orders/update-status/${currentOrderId}`, {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: JSON.stringify({ status: newStatus }),
                });
                const data = await response.json();
    
                if (data.success) {
                    const button = document.querySelector(`.status-btn[data-id="${currentOrderId}"]`);
                    const statusText = button.querySelector('.status-text');
    
                    statusText.textContent = newStatus;
                    button.classList.remove('bg-warning', 'bg-primary', 'bg-info', 'bg-purple', 'bg-success', 'bg-danger', 'bg-secondary');
                    button.classList.add(getStatusColorClass(newStatus));
    
                    bootstrap.Modal.getInstance(statusModal).hide();
    
                    Swal.fire({
                        icon: 'success',
                        title: 'Status Updated',
                        text: data.message,
                        confirmButtonColor: '#3085d6',
                        timer: 2000,
                        timerProgressBar: true,
                    }).then(() => {
                        fetchOrders();
                    });
                } else {
                    throw new Error(data.message);
                }
            } catch (error) {
                console.error('Update status error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message || 'Failed to update status',
                    confirmButtonColor: '#3085d6'
                });
            }
        });
    
        // // Process return request
        // let currentReturnId;
        // document.querySelectorAll('.return-request-btn').forEach(btn => {
        //     btn.addEventListener('click', async function() {
        //         const orderId = this.getAttribute('data-order-id');
        //         currentReturnId = this.getAttribute('data-return-id');
        //         try {
        //             const response = await fetch(`/admin/orders/details/${orderId}`);
        //             const { order, customerStats } = await response.json();
    
        //             if (!response.ok) {
        //                 throw new Error(order.message || 'Failed to fetch order details');
        //             }
    
        //             // Populate return request modal
        //             document.getElementById('returnRequestBody').innerHTML = `
        //                 <div class="row mb-4">
        //                     <div class="col-md-8">
        //                         <h6>Return Request #RTN-${order.orderId}</h6>
        //                         <p class="text-muted mb-0">Submitted on ${new Date(order.updatedAt).toLocaleString()}</p>
        //                     </div>
        //                     <div class="col-md-4 text-end">
        //                         <span class="badge bg-warning text-dark">Pending Review</span>
        //                     </div>
        //                 </div>
    
        //                 <div class="row mb-4">
        //                     <div class="col-md-6">
        //                         <div class="card h-100">
        //                             <div class="card-header">
        //                                 <h6 class="mb-0">Order Information</h6>
        //                             </div>
        //                             <div class="card-body">
        //                                 <p class="mb-1"><strong>Order ID:</strong> #${order.orderId}</p>
        //                                 <p class="mb-1"><strong>Purchase Date:</strong> ${new Date(order.createdAt).toLocaleDateString()}</p>
        //                                 <p class="mb-1"><strong>Delivery Date:</strong> ${order.status === 'Delivered' ? new Date(order.updatedAt).toLocaleDateString() : 'N/A'}</p>
        //                                 <p class="mb-0"><strong>Amount:</strong> ₹${order.finalAmount.toLocaleString('en-IN')}</p>
        //                             </div>
        //                         </div>
        //                     </div>
        //                     <div class="col-md-6">
        //                         <div class="card h-100">
        //                             <div class="card-header">
        //                                 <h6 class="mb-0">Customer Information</h6>
        //                             </div>
        //                             <div class="card-body">
        //                                 <p class="mb-1"><strong>Name:</strong> ${order.userId.username}</p>
        //                                 <p class="mb-1"><strong>Email:</strong> ${order.userId.email}</p>
        //                                 <p class="mb-1"><strong>Phone:</strong> +91 ${order.userId.phone || order.address.phone}</p>
        //                                 <p class="mb-0"><strong>Previous Returns:</strong> ${customerStats.totalReturns}</p>
        //                             </div>
        //                         </div>
        //                     </div>
        //                 </div>
    
        //                 <div class="card mb-4">
        //                     <div class="card-header">
        //                         <h6 class="mb-0">Return Item</h6>
        //                     </div>
        //                     <div class="card-body p-0">
        //                         <div class="table-responsive">
        //                             <table class="table mb-0">
        //                                 <thead class="bg-light">
        //                                     <tr>
        //                                         <th>Product</th>
        //                                         <th class="text-center">Quantity</th>
        //                                         <th>Return Reason</th>
        //                                         <th class="text-end">Amount</th>
        //                                     </tr>
        //                                 </thead>
        //                                 <tbody>
        //                                     ${order.orderedItems.map(item => `
        //                                         <tr>
        //                                             <td>
        //                                                 <div class="d-flex align-items-center">
        //                                                     <img src="/uploads/products/${item.product.cardImage}" alt="${item.product.productName}" class="me-3" style="width: 60px; height: 60px; object-fit: cover;">
        //                                                     <div>
        //                                                         <h6 class="mb-0">${item.product.productName}</h6>
        //                                                         <small class="text-muted">SKU: ${item.product.sku || 'N/A'}</small>
        //                                                     </div>
        //                                                 </div>
        //                                             </td>
        //                                             <td class="text-center">${item.quantity}</td>
        //                                             <td>${item.returnReason || 'N/A'}</td>
        //                                             <td class="text-end">₹${(item.quantity * item.price).toLocaleString('en-IN')}</td>
        //                                         </tr>
        //                                     `).join('')}
        //                                 </tbody>
        //                             </table>
        //                         </div>
        //                     </div>
        //                 </div>
    
        //                 <div class="card mb-4">
        //                     <div class="card-header">
        //                         <h6 class="mb-0">Customer's Return Details</h6>
        //                     </div>
        //                     <div class="card-body">
        //                         <div class="mb-3">
        //                             <label class="form-label">Reason for Return</label>
        //                             <p>${order.returnReason || 'Not provided'}</p>
        //                         </div>
        //                         <div class="mb-0">
        //                             <label class="form-label">Attached Evidence</label>
        //                             <div class="row g-2">
        //                                 ${order.returnEvidence && order.returnEvidence.length > 0 ? order.returnEvidence.map((evidence, index) => `
        //                                     <div class="col-md-4">
        //                                         <div class="position-relative">
        //                                             <img src="${evidence}" alt="Evidence ${index + 1}" class="img-thumbnail">
        //                                             <button class="btn btn-sm btn-light position-absolute top-0 end-0 m-1" data-bs-toggle="modal" data-bs-target="#imageViewerModal" data-img="${evidence}">
        //                                                 <i class="fas fa-search-plus"></i>
        //                                             </button>
        //                                         </div>
        //                                     </div>
        //                                 `).join('') : '<p>No evidence provided.</p>'}
        //                             </div>
        //                         </div>
        //                     </div>
        //                 </div>
    
        //                 <div class="card">
        //                     <div class="card-header">
        //                         <h6 class="mb-0">Return Action</h6>
        //                     </div>
        //                     <div class="card-body">
        //                         <div class="mb-3">
        //                             <label for="returnStatus" class="form-label">Return Status</label>
        //                             <select class="form-select" id="returnStatus">
        //                                 <option value="approved">Approve Return</option>
        //                                 <option value="rejected">Reject Return</option>
        //                                 <option value="more_info">Request More Information</option>
        //                             </select>
        //                         </div>
        //                         <div class="mb-3">
        //                             <label for="refundMethod" class="form-label">Refund Method (if approved)</label>
        //                             <select class="form-select" id="refundMethod">
        //                                 <option value="original">Original Payment Method</option>
        //                                 <option value="Wallet">Store Wallet</option>
        //                                 <option value="exchange">Product Exchange</option>
        //                             </select>
        //                         </div>
        //                         <div class="mb-3">
        //                             <label for="returnNote" class="form-label">Note to Customer</label>
        //                             <textarea class="form-control" id="returnNote" rows="3" placeholder="Enter note to customer..."></textarea>
        //                         </div>
        //                         <div class="mb-3">
        //                             <label for="internalNote" class="form-label">Internal Note</label>
        //                             <textarea class="form-control" id="internalNote" rows="2" placeholder="Enter internal note..."></textarea>
        //                         </div>
        //                         <div class="form-check mb-0">
        //                             <input class="form-check-input" type="checkbox" id="sendNotification" checked>
        //                             <label class="form-check-label" for="sendNotification">
        //                                 Send email notification to customer
        //                             </label>
        //                         </div>
        //                     </div>
        //                 </div>
        //             `;
        //         } catch (error) {
        //             console.error('Error fetching return request details:', error);
        //             Swal.fire({
        //                 icon: 'error',
        //                 title: 'Error',
        //                 text: 'Failed to load return request details',
        //             });
        //         }
        //     });
        // });
    
        document.getElementById('processReturnBtn').addEventListener('click', async function() {
            const returnStatus = document.getElementById('returnStatus').value;
            const refundMethod = document.getElementById('refundMethod').value;
            const statusNote = document.getElementById('returnNote').value;
            const internalNote = document.getElementById('internalNote').value;
            const sendNotification = document.getElementById('sendNotification').checked;
    
            try {
                const response = await fetch(`/admin/orders/process-return/${currentReturnId}`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        returnStatus,
                        refundMethod,
                        statusNote,
                        internalNote,
                        sendNotification,
                    }),
                });
                const data = await response.json();
    
                if (data.success) {
                    const returnModal = bootstrap.Modal.getInstance(document.getElementById('returnRequestModal'));
                    returnModal.hide();
    
                    let statusText = 'processed';
                    let icon = 'success';
                    if (returnStatus === 'approved') {
                        statusText = 'approved';
                    } else if (returnStatus === 'rejected') {
                        statusText = 'rejected';
                        icon = 'error';
                    } else if (returnStatus === 'more_info') {
                        statusText = 'pending additional information';
                        icon = 'info';
                    }
    
                    Swal.fire({
                        icon: icon,
                        title: 'Return Request Processed',
                        text: `The return request has been ${statusText} successfully.`,
                        showConfirmButton: true,
                    }).then(() => {
                        fetchOrders();
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message || 'Failed to process return request',
                    });
                }
            } catch (error) {
                console.error('Error processing return request:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Server error while processing return request',
                });
            }
        });
    
        // Export orders
        // document.getElementById('exportOrdersBtn').addEventListener('click', function() {
        //     Swal.fire({
        //         title: 'Exporting Orders...',
        //         html: 'Please wait while we generate your export file.',
        //         allowOutsideClick: false,
        //         didOpen: () => {
        //             Swal.showLoading();
        //         },
        //     });
    
        //     fetch('/admin/orders/export')
        //         .then(response => {
        //             if (!response.ok) throw new Error('Failed to export orders');
        //             return response.blob();
        //         })
        //         .then(blob => {
        //             const url = window.URL.createObjectURL(blob);
        //             const a = document.createElement('a');
        //             a.href = url;
        //             a.download = 'orders_export.csv';
        //             document.body.appendChild(a);
        //             a.click();
        //             a.remove();
        //             window.URL.revokeObjectURL(url);
    
        //             Swal.fire({
        //                 icon: 'success',
        //                 title: 'Export Complete',
        //                 text: 'Your orders export file has been generated successfully.',
        //                 confirmButtonText: 'OK',
        //             });
        //         })
        //         .catch(error => {
        //             console.error('Error exporting orders:', error);
        //             Swal.fire({
        //                 icon: 'error',
        //                 title: 'Error',
        //                 text: 'Failed to export orders',
        //             });
        //         });
        // });
    
        // Image viewer modal
        const imageViewerModal = document.getElementById('imageViewerModal');
        imageViewerModal.addEventListener('show.bs.modal', function(event) {
            const button = event.relatedTarget;
            const imgUrl = button.getAttribute('data-img');
            document.getElementById('modalImage').src = imgUrl;
        });
    }
    
    // Event listeners for form submission and filter changes
    document.addEventListener('DOMContentLoaded', function() {
        const filterForm = document.getElementById('orderFilterForm');
    
        // Prevent default form submission
        filterForm.addEventListener('submit', (e) => {
            e.preventDefault();
            fetchOrders();
        });
    
        // Fetch orders on filter change
        document.querySelectorAll('#orderStatusFilter, #paymentStatusFilter, #dateFilter, #searchInput').forEach(input => {
            input.addEventListener('change', () => fetchOrders());
        });
    
        // Clear filters
        const clearFiltersBtn = document.getElementById('clearFilters');
        if (clearFiltersBtn) {
            clearFiltersBtn.addEventListener('click', () => {
                document.getElementById('searchInput').value = '';
                document.getElementById('orderStatusFilter').value = 'All';
                document.getElementById('paymentStatusFilter').value = 'All';
                document.getElementById('dateFilter').value = 'All';
                fetchOrders();
            });
        }
    
        // Initial fetch
        fetchOrders();
    });
    </script>
    
    <%- include("../../views/partial/admin/footer") %>
