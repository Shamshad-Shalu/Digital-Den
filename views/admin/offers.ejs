<%- include("../../views/partial/admin/header") %>

<div class="container-fluid py-4">
  <h1 class="h3 mb-4">Offers Management</h1>
  <button class="btn btn-primary mb-4" data-bs-toggle="modal" data-bs-target="#addOfferModal">
    <i class="fas fa-plus me-2"></i>Add New Offer
  </button>

  <div class="card">
    <div class="card-body">
      <div class="table-responsive">
        <table class="table table-hover" id="offersTable">
          <thead>
            <tr>
              <th>#</th>
              <th>Name</th>
              <th>Discount</th>
              <th>Start Date</th>
              <th>End Date</th>
              <th>Applies To</th>
              <th>Status</th>
            </tr>
          </thead>
          <tbody>
            <% if (offers && offers.length > 0) { %>
              <% offers.forEach((offer, index) => { %>
                <% 
                  const now = new Date();
                  const status = offer.isActive && new Date(offer.startDate) <= now && new Date(offer.endDate) >= now
                    ? 'Active'
                    : new Date(offer.startDate) > now
                    ? 'Upcoming'
                    : 'Expired';
                  const appliesToText = offer.isAll ? `All ${offer.appliesTo}` : `${offer.appliesTo} (${offer.targetIds.length} selected)`;
                %>
                <tr>
                  <td><%= (page - 1) * limit + index + 1 %></td>
                  <td><%= offer.name %></td>
                  <td><%= offer.discountPercentage %>%</td>
                  <td><%= new Date(offer.startDate).toLocaleDateString() %></td>
                  <td><%= new Date(offer.endDate).toLocaleDateString() %></td>
                  <td><%= appliesToText %></td>
                  <td>
                    <span class="badge <%= status === 'Active' ? 'bg-success' : status === 'Upcoming' ? 'bg-warning' : 'bg-danger' %>">
                      <%= status %>
                    </span>
                  </td>
                </tr>
              <% }) %>
            <% } else { %>
              <tr><td colspan="7" class="text-center">No offers found. Add some!</td></tr>
            <% } %>
          </tbody>
        </table>
      </div>
      <% if (total > limit) { %>
        <div class="d-flex justify-content-between align-items-center mt-4">
          <div>Showing <%= (page - 1) * limit + 1 %> to <%= Math.min(page * limit, total) %> of <%= total %> Offers</div>
          <nav>
            <ul class="pagination mb-0">
              <li class="page-item <%= page === 1 ? 'disabled' : '' %>">
                <a class="page-link" href="/admin/offers?page=<%= page - 1 %>" aria-label="Previous"><i class="fas fa-chevron-left"></i></a>
              </li>
              <% for (let i = 1; i <= totalPages; i++) { %>
                <li class="page-item <%= i === page ? 'active' : '' %>">
                  <a class="page-link" href="/admin/offers?page=<%= i %>"><%= i %></a>
                </li>
              <% } %>
              <li class="page-item <%= page === totalPages ? 'disabled' : '' %>">
                <a class="page-link" href="/admin/offers?page=<%= page + 1 %>" aria-label="Next"><i class="fas fa-chevron-right"></i></a>
              </li>
            </ul>
          </nav>
        </div>
      <% } %>
    </div>
  </div>
</div>

<!-- Add Offer Modal -->
<div class="modal fade" id="addOfferModal" tabindex="-1" aria-labelledby="addOfferModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Add New Offer</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <form id="addOfferForm">
        <div class="modal-body">
          <div class="mb-3">
            <label class="form-label">Name</label>
            <input type="text" class="form-control" name="name" required>
          </div>
          <div class="mb-3">
            <label class="form-label">Discount (%)</label>
            <input type="number" class="form-control" name="discountPercentage" min="0" max="100" required>
          </div>
          <div class="mb-3">
            <label class="form-label">Minimum Purchase</label>
            <input type="number" class="form-control" name="minPurchase" min="0">
          </div>
          <div class="mb-3">
            <label class="form-label">Max Discount Amount</label>
            <input type="number" class="form-control" name="maxDiscount" min="0">
          </div>
          <div class="row mb-3">
            <div class="col">
              <label class="form-label">Start Date</label>
              <input type="date" class="form-control" name="startDate" required>
            </div>
            <div class="col">
              <label class="form-label">End Date</label>
              <input type="date" class="form-control" name="endDate" required>
            </div>
          </div>
          <div class="mb-3">
            <label class="form-label">Status</label>
            <select class="form-select" name="isActive" required>
              <option value="true">Active</option>
              <option value="false">Inactive</option>
            </select>
          </div>
          <div class="mb-3">
            <label class="form-label">Applies To</label>
            <select class="form-select" name="appliesTo" id="appliesTo" required>
              <option value="products">Products</option>
              <option value="categories">Categories</option>
              <option value="brands">Brands</option>
            </select>
          </div>
          <div class="mb-3">
            <label class="form-label">Selection Type</label>
            <select class="form-select" name="isAll" id="isAll" required>
              <option value="true">All</option>
              <option value="false">Specific</option>
            </select>
          </div>
          <div class="mb-3" id="specificItemsField" style="display: none;">
            <label class="form-label">Select Items</label>
            <select class="form-select" name="targetIds" id="targetIds" multiple style="width: 100%;"></select>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="submit" class="btn btn-primary">Add</button>
        </div>
      </form>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />

<script>
  async function loadOffers() {
    try {
      const response = await fetch('/admin/offers');
      const data = await response.json();
      if (!data.success) throw new Error(data.message);
      const { offers, total, page, limit } = data;
      const tbody = document.querySelector('#offersTable tbody');
      tbody.innerHTML = '';
      if (offers.length === 0) {
        tbody.innerHTML = '<tr><td colspan="7" class="text-center">No offers found. Add some!</td></tr>';
        return;
      }
      offers.forEach((offer, index) => {
        const now = new Date();
        const status = offer.isActive && new Date(offer.startDate) <= now && new Date(offer.endDate) >= now
          ? 'Active'
          : new Date(offer.startDate) > now
          ? 'Upcoming'
          : 'Expired';
        const appliesToText = offer.isAll ? `All ${offer.appliesTo}` : `${offer.appliesTo} (${offer.targetIds.length} selected)`;

        tbody.innerHTML += `
          <tr>
            <td>${(page - 1) * limit + index + 1}</td>
            <td>${offer.name}</td>
            <td>${offer.discountPercentage}%</td>
            <td>${new Date(offer.startDate).toLocaleDateString()}</td>
            <td>${new Date(offer.endDate).toLocaleDateString()}</td>
            <td>${appliesToText}</td>
            <td><span class="badge ${status === 'Active' ? 'bg-success' : status === 'Upcoming' ? 'bg-warning' : 'bg-danger'}">${status}</span></td>
          </tr>
        `;
      });
    } catch (err) {
      console.error('Error loading offers:', err);
    }
  }

  async function loadOptions(appliesTo) {
  try {
    console.log('Loading options for:', appliesTo);
    const response = await fetch(`/admin/offer-options?appliesTo=${appliesTo}`);
    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
    const data = await response.json();
    console.log('Response data:', data);
    if (!data.success) throw new Error(data.message);
    const { options } = data;
    if (!options || options.length === 0) {
      console.warn('No options available for:', appliesTo);
      alert(`No ${appliesTo} found in the database. Please add some ${appliesTo} first.`);
      return;
    }
    const select = $('#targetIds');
    select.empty();
    options.forEach(opt => {
      // Fix this part to properly handle different entity types
      let displayName;
      if (appliesTo === 'products') {
        displayName = opt.productName || 'Unnamed Product';
      } else if (appliesTo === 'categories') {
        displayName = opt.name || 'Unnamed Category';
      } else if (appliesTo === 'brands') {
        displayName = opt.brandName || 'Unnamed Brand';
      } else {
        displayName = 'Unnamed';
      }
      const option = new Option(displayName, opt._id);
      select.append(option);
    });
    // Reinitialize Select2 after adding options
    if (!select.hasClass('select2-hidden-accessible')) {
      select.select2({ placeholder: `Select ${appliesTo}`, allowClear: true });
    } else {
      select.trigger('change.select2'); // Refresh if already initialized
    }
  } catch (err) {
    console.error('Error loading options:', err);
    alert('Failed to load options. Check console for details.');
  }
}

  function updateForm() {
    const appliesTo = document.getElementById('appliesTo').value;
    const isAll = document.getElementById('isAll').value === 'true';
    const specificItemsField = document.getElementById('specificItemsField');

    specificItemsField.style.display = isAll ? 'none' : 'block';
    if (!isAll) {
      loadOptions(appliesTo);
    } else {
      $('#targetIds').select2('destroy').empty();
    }
  }

  document.getElementById('addOfferForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(e.target);
    const data = Object.fromEntries(formData);
    if (data.isAll === 'false') {
      data.targetIds = $('#targetIds').val() || [];
    } else {
      data.targetIds = [];
    }

    try {
      const response = await fetch('/admin/offers', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data)
      });
      const result = await response.json();
      if (result.success) {
        bootstrap.Modal.getInstance(document.getElementById('addOfferModal')).hide();
        loadOffers();
      } else {
        alert(result.message);
      }
    } catch (err) {
      console.error('Error submitting offer:', err);
      alert('An error occurred while adding the offer.');
    }
  });

  document.getElementById('appliesTo').addEventListener('change', updateForm);
  document.getElementById('isAll').addEventListener('change', updateForm);

  $(document).ready(function() {
    $('#targetIds').select2({ placeholder: 'Select items', allowClear: true });
    updateForm(); // Initial call to set up the form
  });

  loadOffers();
</script>
<%- include("../../views/partial/admin/footer.ejs") %>