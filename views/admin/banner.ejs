<%- include("../../views/partial/admin/header") %>
<style>
    .cursor-pointer {
        cursor: pointer;
    }

    .date-header {
        border-left: 3px solid #dee2e6;
    }

    .order-id-link {
        max-width: 150px;
        display: inline-block;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .view-details:hover {
        color: #0056b3;
        transform: scale(1.2);
        transition: all 0.2s;
    }
    .avatar-sm {
        width: 36px;
        height: 36px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 0.875rem;
    }

    .avatar-lg {
        width: 56px;
        height: 56px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.25rem;
    }

    .timeline-dot {
        width: 14px;
        height: 14px;
        border-radius: 50%;
        margin-top: 4px;
    }

    .stats-card {
        transition: transform 0.3s;
    }

    .stats-card:hover {
        transform: translateY(-5px);
    }

    .stats-card .border-start {
        border-left-width: 4px !important;
    }

    /* Custom date range styles */
    .custom-date {
        transition: all 0.3s ease;
    }

    /* Table date header styles */
    .table-light .badge {
        font-size: 0.8rem;
    }

    /* Order details modal styles */
    #orderDetailsModal .border-start {
        border-left: 1px solid #dee2e6;
    }

    /* Responsive styles */
    @media (max-width: 768px) {
        .stats-card .card-body {
            padding: 1rem;
        }
        
        #orderDetailsModal .border-start {
            border-left: none;
            padding-left: 0;
            margin-top: 1rem;
        }
    }



/* Revised Filter Styles - More distinct separate section */
.filter-section {
  border-radius: 8px;
  padding: 16px;
  border: 1px solid var(--bs-border-color);
  background: transparent;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
  margin-bottom: 20px;
  position: relative;
}

/* Filter header styling */
.filter-header {
  border-bottom: 1px solid var(--bs-border-color);
  padding-bottom: 12px;
  margin-bottom: 16px;
}

.filter-header h6 {
  font-size: 16px;
  font-weight: 600;
}

/* Filter labels - slightly bigger */
.filter-label {
  display: block;
  font-size: 13px;
  font-weight: 500;
  margin-bottom: 5px;
  opacity: 0.8;
}

/* Form controls - slightly taller */
.filter-control {
  font-size: 14px;
  border-radius: 4px;
  height: calc(1.8em + 0.75rem + 2px);
}

/* Active filter indication */
.filter-control:not([value="all"]):not([value=""]):not([value="weekly"]) {
  border-left: 3px solid var(--bs-primary);
}

/* Clear button - more visible */
#resetFiltersBtn {
  border-width: 1px;
  font-size: 13px;
  padding: 0.25rem 0.7rem;
}

/* Search container - smaller */
.search-container {
  position: relative;
  margin-bottom: 16px;
}

#searchInput {
  height: 36px;
  font-size: 14px;
}

#clearSearchBtn {
  display: none;
}

#clearSearchBtn.active {
  display: block;
}

/* Custom date display logic */
.custom-date-field input.d-none {
  display: none !important;
}

.custom-date-field input:not(.d-none) {
  display: block;
}

/* For dark mode compatibility */
@media (prefers-color-scheme: dark) {
  .filter-section {
    background-color: rgba(255, 255, 255, 0.05);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
  }
  
  .input-group-text {
    background-color: rgba(255, 255, 255, 0.1);
    border-color: rgba(255, 255, 255, 0.2);
  }
  
  .filter-header {
    border-bottom-color: rgba(255, 255, 255, 0.1);
  }
}

/* Responsive adjustments */
@media (max-width: 767px) {
  .filter-section {
    padding: 12px;
  }
  
  .filter-label {
    font-size: 12px;
  }
  
  .row.g-3 {
    --bs-gutter-y: 0.75rem;
  }
}
</style>

<!-- Sales Report Section -->
<div class="container-fluid py-4">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3">Sales Reports</h1>
            <p class="text-muted">View and analyze your sales data</p>
        </div>
        <div>
            <button class="btn btn-primary" id="exportReportBtn">
                <i class="fas fa-file-export me-2"></i>Export Report
            </button>
        </div>
    </div>
    
    <!-- Stats Cards - Improved UI -->
    <div class="row g-3 mb-4">
        <div class="col-md-3">
            <div class="card stats-card orders border-start border-4 border-primary">
                <div class="card-body d-flex align-items-center">
                    <div class="bg-primary bg-opacity-10 p-3 rounded-circle me-3">
                        <i class="fas fa-shopping-cart text-primary fs-4"></i>
                    </div>
                    <div>
                        <p class="text-muted small mb-0">Total Orders</p>
                        <h3 class="mb-0 fw-bold"><%= totalOrder || 0 %></h3>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-3">
            <div class="card stats-card revenue border-start border-4 border-success">
                <div class="card-body d-flex align-items-center">
                    <div class="bg-success bg-opacity-10 p-3 rounded-circle me-3">
                        <i class="fas fa-rupee-sign text-success fs-4"></i>
                    </div>
                    <div>
                        <p class="text-muted small mb-0">Total Revenue</p>
                        <h3 class="mb-0 fw-bold">₹<%= (totalRevenue || 0).toFixed(2) %></h3>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-3">
            <div class="card stats-card discount border-start border-4 border-warning">
                <div class="card-body d-flex align-items-center">
                    <div class="bg-warning bg-opacity-10 p-3 rounded-circle me-3">
                        <i class="fas fa-tag text-warning fs-4"></i>
                    </div>
                    <div>
                        <p class="text-muted small mb-0">Total Discount</p>
                        <h3 class="mb-0 fw-bold"><%= (totalDiscount || 0).toFixed(2) %></h3>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-3">
            <div class="card stats-card returns border-start border-4 border-danger">
                <div class="card-body d-flex align-items-center">
                    <div class="bg-danger bg-opacity-10 p-3 rounded-circle me-3">
                        <i class="fas fa-undo text-danger fs-4"></i>
                    </div>
                    <div>
                        <p class="text-muted small mb-0">Returns</p>
                        <h3 class="mb-0 fw-bold">₹<%= (totalReturns || 0).toFixed(2) %></h3>
                    </div>
                </div>
            </div>
        </div>
    </div>
<!-- Revised Filter Section -->
<div class="filter-section mb-3">
    <form action="" id="saleFilterForm">
        <div class="filter-header d-flex justify-content-between align-items-center mb-3">
            <h6 class="fw-bold mb-0">Filter Sales</h6>
            <div class="filter-actions">
              <button type="button" class="btn btn-sm btn-outline-primary" id="clearFilters">
                <i class="fas fa-times me-1"></i>Clear Filters
              </button>
            </div>
          </div>
        
          <div class="filter-content">
            <div class="search-container mb-3">
              <div class="input-group">
                <span class="input-group-text">
                  <i class="fas fa-search"></i>
                </span>
                <input type="text" class="form-control" id="searchInput" 
                       placeholder="Search by order ID, customer...">
                <button class="btn btn-outline-secondary" type="button" id="searchInput">
                  <i class="fas fa-times"></i>
                </button>
              </div>
            </div>
            
            <!-- Filter Controls -->
            <div class="row g-3">
              <!-- Status Filter -->
              <div class="col-md-3 col-6">
                <label class="filter-label">Status</label>
                <select class="form-select filter-control" id="statusFilter">
                  <option value="All">All Status</option>
                  <option value="Pending">Pending</option>
                  <option value="Processing">Processing</option>
                  <option value="Shipped">Shipped</option>
                  <option value="Out for Delivery">Out for Delivery</option>
                  <option value="Delivered">Delivered</option>
                  <option value="Cancelled">Cancelled</option>
                  <option value="Return Request">Return Request</option>
                  <option value="Returned">Returned</option>
                </select>
              </div>
        
              <!-- Payment Method Filter -->
              <div class="col-md-3 col-6">
                <label class="filter-label">Payment Method</label>
                <select class="form-select filter-control" id="paymentFilter">
                  <option value="All">All Payments</option>
                  <option value="COD">Cash on Delivery</option>
                  <option value="Online">Razorpay</option>
                  <option value="Wallet">Wallet</option>
                </select>
              </div>
        
              <!-- Category Filter -->
              <div class="col-md-3 col-6">
                <label class="filter-label">Category</label>
                <select class="form-select filter-control" id="categoryFilter">
                  <option value="All">All Categories</option>
                  <option value="lap">Laptop</option>
                  <option value="keyboard">Keyboard</option>
                  <option value="mouse">Mouse</option>
                  <option value="monitor">Monitor</option>
                </select>
              </div>
        
              <!-- Brand Filter -->
              <div class="col-md-3 col-6">
                <label class="filter-label">Brand</label>
                <select class="form-select filter-control" id="brandFilter">
                  <option value="all">All Brands</option>
                  <option value="apple">Apple</option>
                  <option value="dell">Dell</option>
                  <option value="hp">HP</option>
                  <option value="asus">Asus</option>
                </select>
              </div>
              
              <!-- Price Range Filter -->
              <div class="col-md-4 col-12">
                <label class="filter-label">Price Range</label>
                <div class="input-group">
                  <input type="number" class="form-control filter-control" placeholder="Min" id="minPrice">
                  <span class="input-group-text">to</span>
                  <input type="number" class="form-control filter-control" placeholder="Max" id="maxPrice">
                </div>
              </div>
              
              <!-- Date Range Filter -->
              <div class="col-md-8 col-12">
                <label class="filter-label">Date Range</label>
                <div class="row g-2">
                  <div class="col-md-4">
                    <select class="form-select filter-control" id="dateRangeSelect">
                      <option value="all">All Time</option>
                      <option value="today">Today</option>
                      <option value="yesterday">Yesterday</option>
                      <option value="weekly">This Week</option>
                      <option value="monthly">This Month</option>
                      <option value="custom">Custom Range</option>
                    </select>
                  </div>
                  <div class="col-md-4 custom-date-field">
                    <input type="date" class="form-control filter-control d-none" id="startDate" placeholder="From">
                  </div>
                  <div class="col-md-4 custom-date-field">
                    <input type="date" class="form-control filter-control d-none" id="endDate" placeholder="To">
                  </div>
                </div>
              </div>
            </div>
          </div>
    </form>
  </div>

  <div class="card shadow-sm">
    <div class="card-header bg-transparent d-flex justify-content-between align-items-center py-3">
        <h5 class="mb-0">Sales Details</h5>
        <div>
            <button class="btn btn-sm btn-outline-primary me-2" id="downloadPdf">
                <i class="fas fa-file-pdf me-1"></i>PDF
            </button>
            <button class="btn btn-sm btn-outline-success" id="downloadExcel">
                <i class="fas fa-file-excel me-1"></i>Excel
            </button>
        </div>
    </div>
    <div class="card-body p-0">
        <div class="table-responsive">
            <table class="table align-middle mb-0">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Date</th>
                        <th>Order ID</th>
                        <th>Customer</th>
                        <th>Items</th>
                        <th>Payment</th>
                        <th>Subtotal</th>
                        <th>Discount</th>
                        <th>Total</th>
                        <th>Status</th>
                        <th></th> <!-- Actions column without header text -->
                    </tr>
                </thead>
                <tbody id="tableBody" >
                    <!-- <tr>
                        <td>2</td>
                        <td><span class="text-muted">Apr 4, 2025</span></td>
                        <td>
                            <a href="#" class="text-decoration-none order-id-link" data-bs-toggle="tooltip" title="#6b050859-0794-4c7b-9584-a7de85267112">
                                #6b050859...
                            </a>
                        </td>
                        <td>
                            <div>
                                <div class="fw-medium">Shamshad Shalu</div>
                                <small class="text-muted">shamshadshalu036@gmail.com</small>
                            </div>
                        </td>
                        <td>
                            <span class="text-muted">1 item</span>
                        </td>
                        <td><span class="badge bg-warning text-dark">UPI</span></td>
                        <td>₹698.72</td>
                        <td class="text-danger">-₹59.90</td>
                        <td class="fw-bold">₹638.82</td>
                        <td><span class="badge bg-secondary">Return Request</span></td>
                        <td>
                            <i class="fas fa-info-circle text-primary cursor-pointer view-details" data-order-id="6b050859"></i>
                        </td>
                    </tr>
                    <tr>
                        <td>3</td>
                        <td><span class="text-muted">Apr 4, 2025</span></td>
                        <td>
                            <a href="#" class="text-decoration-none order-id-link" data-bs-toggle="tooltip" title="#e0a0356c-5bf4-4d77-8952-a85dcf365412">
                                #e0a0356c...
                            </a>
                        </td>
                        <td>
                            <div>
                                <div class="fw-medium">Shamshad Shalu</div>
                                <small class="text-muted">shamshadshalu036@gmail.com</small>
                            </div>
                        </td>
                        <td>
                            <span class="text-muted">1 item</span>
                        </td>
                        <td><span class="badge bg-success text-white">Wallet</span></td>
                        <td>₹116.08</td>
                        <td class="text-danger">-₹0.00</td>
                        <td class="fw-bold">₹116.08</td>
                        <td><span class="badge bg-success">Delivered</span></td>
                        <td>
                            <i class="fas fa-info-circle text-primary cursor-pointer view-details" data-order-id="e0a0356c"></i>
                        </td>
                    </tr>
                    
                    <tr>
                        <td>4</td>
                        <td><span class="text-muted">Mar 28, 2025</span></td>
                        <td>
                            <a href="#" class="text-decoration-none order-id-link" data-bs-toggle="tooltip" title="#9bae06ec-ee63-4b20-a321-b72e145a9812">
                                #9bae06ec...
                            </a>
                        </td>
                        <td>
                            <div>
                                <div class="fw-medium">Shamshad Shalu</div>
                                <small class="text-muted">shamshadshalu036@gmail.com</small>
                            </div>
                        </td>
                        <td>
                            <span class="text-muted">2 items</span>
                        </td>
                        <td><span class="badge bg-dark text-white">COD</span></td>
                        <td>₹1,384.99</td>
                        <td class="text-danger">-₹164.87</td>
                        <td class="fw-bold">₹1,220.12</td>
                        <td><span class="badge bg-warning text-dark">Pending</span></td>
                        <td>
                            <i class="fas fa-info-circle text-primary cursor-pointer view-details" data-order-id="9bae06ec"></i>
                        </td>
                    </tr>
                    
                    <tr>
                        <td>5</td>
                        <td><span class="text-muted">Mar 27, 2025</span></td>
                        <td>
                            <a href="#" class="text-decoration-none order-id-link" data-bs-toggle="tooltip" title="#2c04326a-768f-4c14-b598-c56ea1932145">
                                #2c04326a...
                            </a>
                        </td>
                        <td>
                            <div>
                                <div class="fw-medium">Shamshad Shalu</div>
                                <small class="text-muted">shamshadshalu100@gmail.com</small>
                            </div>
                        </td>
                        <td>
                            <span class="text-muted">3 items</span>
                        </td>
                        <td><span class="badge bg-primary text-white">Net Banking</span></td>
                        <td>₹9,240.95</td>
                        <td class="text-danger">-₹872.39</td>
                        <td class="fw-bold">₹8,368.56</td>
                        <td><span class="badge bg-danger">Cancelled</span></td>
                        <td>
                            <i class="fas fa-info-circle text-primary cursor-pointer view-details" data-order-id="2c04326a"></i>
                        </td>
                    </tr> -->
                </tbody>
            </table>
        </div>
        
        <!-- Pagination -->
        <div class="d-flex justify-content-between align-items-center p-3 " id="paginationSection">
            <!-- Dynamically populated  -->
        </div>
    </div>
</div>


<!-- Export Options Modal -->
<div class="modal fade" id="exportModal" tabindex="-1" aria-labelledby="exportModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exportModalLabel">Export Report</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label">Export Format</label>
                    <select class="form-select" id="exportFormat">
                        <option value="pdf">PDF Document</option>
                        <option value="excel">Excel Spreadsheet</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label class="form-label">Include</label>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="includeSummary" checked>
                        <label class="form-check-label" for="includeSummary">
                            Sales Summary
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="includeDetails" checked>
                        <label class="form-check-label" for="includeDetails">
                            Order Details
                        </label>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirmExport">Export</button>
            </div>
        </div>
    </div>
</div>


<!-- order -details modal  -->
<div class="modal fade" id="orderDetailsModal" tabindex="-1" aria-labelledby="orderDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="orderDetailsModalLabel">Order Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-0">
                <div class=" p-4">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="d-flex align-items-center mb-3">
                                <div class="avatar-lg bg-primary bg-opacity-10 rounded-circle text-primary me-3 d-flex align-items-center justify-content-center">
                                    <span class="fs-4 fw-bold">SS</span>
                                </div>
                                <div>
                                    <h5 class="mb-1">Shamshad Shalu</h5>
                                    <p class="text-muted mb-0">
                                        <i class="fas fa-envelope me-1"></i> <span id="customerEmail">shamshadshalu036@gmail.com</span>
                                    </p>
                                    <p class="text-muted mb-0">
                                        <i class="fas fa-phone me-1"></i> +91 9876543210
                                    </p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="border-start ps-3 h-100">
                                <p class="mb-1"><strong>Order ID:</strong> <span class="text-primary" id="modalOrderId">#ec9d702e-f3b5</span></p>
                                <p class="mb-1"><strong>Date:</strong> <span id="modalOrderDate">April 5, 2025, 10:24 AM</span></p>
                                <p class="mb-1"><strong>Payment:</strong> <span class="badge bg-info" id="modalPaymentMethod">Credit Card</span></p>
                                <p class="mb-0"><strong>Status:</strong> <span class="badge bg-danger" id="modalOrderStatus">Cancelled</span></p>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Order Items -->
                <div class="p-4">
                    <h6 class="mb-3">Order Items</h6>
                    <div class="table-responsive">
                        <table class="table table-sm border">
                            <thead class="">
                                <tr>
                                    <th>Item</th>
                                    <th>Price</th>
                                    <th>Quantity</th>
                                    <th>Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="rounded p-2 me-3">
                                                <i class="fas fa-box text-primary"></i>
                                            </div>
                                            <div>
                                                <div class="fw-medium">Wireless Headphones</div>
                                                <small class="text-muted">SKU: WH-BT100</small>
                                            </div>
                                        </div>
                                    </td>
                                    <td>₹98.50</td>
                                    <td>1</td>
                                    <td>₹98.50</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                
                <!-- Shipping Address -->
                <div class="border-top p-4">
                    <div class="row">
                        <div class="col-md-6">
                            <h6 class="mb-3">Shipping Address</h6>
                            <div class="card border p-3">
                                <p class="mb-1 fw-medium">Shamshad Shalu</p>
                                <p class="mb-1">123 Main Street, Apartment 4B</p>
                                <p class="mb-1">Bangalore, Karnataka - 560001</p>
                                <p class="mb-0">Phone: +91 9876543210</p>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <h6 class="mb-3">Order Summary</h6>
                            <div class="card border p-3">
                                <div class="d-flex justify-content-between mb-2">
                                    <span>Subtotal:</span>
                                    <span>₹98.50</span>
                                </div>
                                <div class="d-flex justify-content-between mb-2">
                                    <span>Shipping:</span>
                                    <span>₹0.00</span>
                                </div>
                                <div class="d-flex justify-content-between mb-2">
                                    <span>Tax:</span>
                                    <span>₹0.00</span>
                                </div>
                                <div class="d-flex justify-content-between mb-2">
                                    <span>Discount:</span>
                                    <span class="text-danger">-₹11.78</span>
                                </div>
                                <hr>
                                <div class="d-flex justify-content-between fw-bold">
                                    <span>Total:</span>
                                    <span>₹86.72</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Order Timeline -->
                <div class="border-top p-4">
                    <h6 class="mb-3">Order Timeline</h6>
                    <div class="position-relative ps-3">
                        <div class="position-absolute h-100" style="width: 1px; background-color: #ddd; left: 7px; top: 10px;"></div>
                        
                        <div class="d-flex mb-3">
                            <div class="timeline-dot bg-danger me-3"></div>
                            <div>
                                <p class="mb-0 fw-medium">Order Cancelled</p>
                                <p class="text-muted small mb-0">April 5, 2025, 11:30 AM</p>
                                <p class="text-muted small mb-0">Customer cancelled the order</p>
                            </div>
                        </div>
                        
                        <div class="d-flex mb-3">
                            <div class="timeline-dot bg-primary me-3"></div>
                            <div>
                                <p class="mb-0 fw-medium">Payment Processed</p>
                                <p class="text-muted small mb-0">April 5, 2025, 10:35 AM</p>
                                <p class="text-muted small mb-0">Payment of ₹86.72 received via Credit Card</p>
                            </div>
                        </div>
                        
                        <div class="d-flex">
                            <div class="timeline-dot bg-success me-3"></div>
                            <div>
                                <p class="mb-0 fw-medium">Order Placed</p>
                                <p class="text-muted small mb-0">April 5, 2025, 10:24 AM</p>
                                <p class="text-muted small mb-0">Customer placed the order online</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Print Details</button>
            </div>
        </div>
    </div>
</div>


<!-- 
<script>
    document.addEventListener('DOMContentLoaded', function() {
    // Initialize jsPDF
    const { jsPDF } = window.jspdf;

    // Export button event listener
    const exportReportBtn = document.getElementById('exportReportBtn');
    if (exportReportBtn) {
        exportReportBtn.addEventListener('click', function() {
            const exportModal = new bootstrap.Modal(document.getElementById('exportModal'));
            exportModal.show();
        });
    }

    // Confirm export button event listener
    const confirmExport = document.getElementById('confirmExport');
    if (confirmExport) {
        confirmExport.addEventListener('click', function() {
            const format = document.getElementById('exportFormat').value;
            const includeSummary = document.getElementById('includeSummary').checked;
            const includeDetails = document.getElementById('includeDetails').checked;

            if (format === 'pdf') {
                generatePDF(includeSummary, includeDetails);
            } else if (format === 'excel') {
                alert('Excel export not implemented yet');
            }

            // Hide modal
            const exportModal = bootstrap.Modal.getInstance(document.getElementById('exportModal'));
            exportModal.hide();
        });
    }

    // Function to generate PDF
    function generatePDF(includeSummary, includeDetails) {
        const doc = new jsPDF();
        let yPosition = 20;
        const pageHeight = 280;
        const margin = 10;
        const fontSize = 12;
        const lineHeight = 10;

        // Get current date range
        const dateRangeSelect = document.getElementById('dateRangeSelect');
        const dateRange = dateRangeSelect.value === 'custom'
            ? `${document.getElementById('startDate').value} to ${document.getElementById('endDate').value}`
            : dateRangeSelect.options[dateRangeSelect.selectedIndex].text;

        // Title
        doc.setFontSize(18);
        doc.text('Sales Report', margin, yPosition);
        doc.setFontSize(fontSize);
        doc.text(`Period: ${dateRange}`, margin, yPosition + 10);
        yPosition += 20;

        // Sales Summary Section
        if (includeSummary) {
            doc.setFontSize(14);
            doc.text('Sales Summary', margin, yPosition);
            yPosition += 10;

            const summaryData = {
                'Total Orders': document.querySelector('.orders h3').textContent.trim(),
                'Total Revenue': document.querySelector('.revenue h3').textContent.trim(),
                'Total Discount': document.querySelector('.discount h3').textContent.trim(),
                'Returns': document.querySelector('.returns h3').textContent.trim()
            };

            Object.entries(summaryData).forEach(([key, value], index) => {
                if (yPosition > pageHeight) {
                    doc.addPage();
                    yPosition = 20;
                }
                doc.text(`${key}: ${value}`, margin, yPosition);
                yPosition += lineHeight;
            });
            yPosition += 10;
        }

        // Order Details Section
        if (includeDetails) {
            doc.setFontSize(14);
            doc.text('Order Details', margin, yPosition);
            yPosition += 10;

            // Dynamically extract data from the table
            const table = document.querySelector('table tbody');
            const orderData = [];
            table.querySelectorAll('tr').forEach(row => {
                const columns = row.querySelectorAll('td');
                if (columns.length > 0) {
                    orderData.push({
                        date: columns[1].textContent.trim(),
                        orderId: columns[2].querySelector('.order-id-link').getAttribute('title'),
                        customer: columns[3].querySelector('div .fw-medium').textContent.trim(),
                        items: columns[4].textContent.trim(),
                        payment: columns[5].querySelector('.badge').textContent.trim(),
                        subtotal: columns[6].textContent.trim(),
                        discount: columns[7].textContent.trim(),
                        total: columns[8].textContent.trim(),
                        status: columns[9].querySelector('.badge').textContent.trim()
                    });
                }
            });

            // Table headers
            const headers = ['#', 'Date', 'Order ID', 'Customer', 'Items', 'Payment', 'Subtotal', 'Discount', 'Total', 'Status'];
            const data = orderData.map((order, index) => [
                index + 1,
                order.date,
                order.orderId,
                order.customer,
                order.items,
                order.payment,
                order.subtotal,
                order.discount,
                order.total,
                order.status
            ]);

            doc.autoTable({
                startY: yPosition,
                head: [headers],
                body: data,
                theme: 'grid',
                styles: { fontSize: 10, cellPadding: 2 },
                columnStyles: {
                    0: { cellWidth: 10 },
                    1: { cellWidth: 20 },
                    2: { cellWidth: 25 },
                    3: { cellWidth: 30 },
                    4: { cellWidth: 15 },
                    5: { cellWidth: 20 },
                    6: { cellWidth: 20 },
                    7: { cellWidth: 20 },
                    8: { cellWidth: 20 },
                    9: { cellWidth: 25 }
                }
            });

            yPosition = doc.lastAutoTable.finalY + 10;
        }

        // Footer
        doc.setFontSize(10);
        doc.text(`Generated on: ${new Date().toLocaleDateString()}`, margin, pageHeight - 10);
        doc.text(`Page ${doc.internal.getNumberOfPages()}`, 200, pageHeight - 10);

        // Download the PDF
        doc.save(`Sales_Report_${dateRange.replace(/ /g, '_')}.pdf`);
    }

    // Initialize tooltips
    const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    const tooltipList = tooltipTriggerList.map(function(tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl);
    });

    // Setup order detail view handlers
    const viewDetailIcons = document.querySelectorAll('.view-details');
    const orderDetailsModal = new bootstrap.Modal(document.getElementById('orderDetailsModal'));

    const orderData = {
        'ec9d702e': {
            id: '#ec9d702e-f3b5-4a05-849f-857971725545',
            customer: 'Shamshad Shalu',
            email: 'shamshadshalu036@gmail.com',
            date: 'April 5, 2025, 10:24 AM',
            payment: 'Credit Card',
            paymentClass: 'bg-info',
            status: 'Cancelled',
            statusClass: 'bg-danger'
        },
        '6b050859': {
            id: '#6b050859-0794-4c7b-9584-a7de85267112',
            customer: 'Shamshad Shalu',
            email: 'shamshadshalu036@gmail.com',
            date: 'April 4, 2025, 9:15 AM',
            payment: 'UPI',
            paymentClass: 'bg-warning text-dark',
            status: 'Return Request',
            statusClass: 'bg-secondary'
        },
        'e0a0356c': {
            id: '#e0a0356c-5bf4-4d77-8952-a85dcf365412',
            customer: 'Shamshad Shalu',
            email: 'shamshadshalu036@gmail.com',
            date: 'April 4, 2025, 8:30 AM',
            payment: 'Wallet',
            paymentClass: 'bg-success text-white',
            status: 'Delivered',
            statusClass: 'bg-success'
        },
        '9bae06ec': {
            id: '#9bae06ec-ee63-4b20-a321-b72e145a9812',
            customer: 'Shamshad Shalu',
            email: 'shamshadshalu036@gmail.com',
            date: 'March 28, 2025, 2:15 PM',
            payment: 'COD',
            paymentClass: 'bg-dark text-white',
            status: 'Pending',
            statusClass: 'bg-warning text-dark'
        },
        '2c04326a': {
            id: '#2c04326a-768f-4c14-b598-c56ea1932145',
            customer: 'Shamshad Shalu',
            email: 'shamshadshalu100@gmail.com',
            date: 'March 27, 2025, 1:10 PM',
            payment: 'Net Banking',
            paymentClass: 'bg-primary text-white',
            status: 'Cancelled',
            statusClass: 'bg-danger'
        }
    };

    viewDetailIcons.forEach(icon => {
        icon.addEventListener('click', function() {
            const orderId = this.getAttribute('data-order-id');
            if (orderData[orderId]) {
                document.getElementById('modalOrderId').textContent = orderData[orderId].id;
                document.getElementById('customerEmail').textContent = orderData[orderId].email;
                document.getElementById('modalOrderDate').textContent = orderData[orderId].date;
                const paymentBadge = document.getElementById('modalPaymentMethod');
                paymentBadge.textContent = orderData[orderId].payment;
                paymentBadge.className = 'badge ' + orderData[orderId].paymentClass;
                const statusBadge = document.getElementById('modalOrderStatus');
                statusBadge.textContent = orderData[orderId].status;
                statusBadge.className = 'badge ' + orderData[orderId].statusClass;
            }
            orderDetailsModal.show();
        });
    });

    // Integrate direct PDF/Excel buttons with modal
    const downloadPdfBtn = document.getElementById('downloadPdf');
    const downloadExcelBtn = document.getElementById('downloadExcel');
    if (downloadPdfBtn && downloadExcelBtn) {
        downloadPdfBtn.addEventListener('click', function() {
            document.getElementById('exportFormat').value = 'pdf';
            document.getElementById('includeSummary').checked = true;
            document.getElementById('includeDetails').checked = true;
            generatePDF(true, true);
        });
        downloadExcelBtn.addEventListener('click', function() {
            document.getElementById('exportFormat').value = 'excel';
            alert('Excel export not implemented yet');
        });
    }

    // Revised filter functionality
    const searchInput = document.getElementById('searchInput');
    const clearSearchBtn = document.getElementById('clearSearchBtn');
    const resetFiltersBtn = document.getElementById('resetFiltersBtn');
    const dateRangeSelect = document.getElementById('dateRangeSelect');
    const startDate = document.getElementById('startDate');
    const endDate = document.getElementById('endDate');
    const filterControls = document.querySelectorAll('.filter-control');

    function checkFiltersApplied() {
        let hasValue = false;
        if (searchInput.value.trim() !== '') {
            clearSearchBtn.classList.add('active');
            hasValue = true;
        } else {
            clearSearchBtn.classList.remove('active');
        }
        filterControls.forEach(el => {
            if ((el.tagName === 'SELECT' && el.value !== 'all' && el.value !== 'weekly') || 
                (el.tagName === 'INPUT' && el.value.trim() !== '')) {
                hasValue = true;
            }
        });
        resetFiltersBtn.classList.toggle('d-none', !hasValue);
        return hasValue;
    }

    function applyFilters() {
        const filters = {
            searchQuery: searchInput.value.trim(),
            paymentMethod: document.getElementById('paymentFilter').value,
            status: document.getElementById('statusFilter').value,
            category: document.getElementById('categoryFilter').value,
            brand: document.getElementById('brandFilter').value,
            minPrice: document.getElementById('minPrice').value || null,
            maxPrice: document.getElementById('maxPrice').value || null,
            dateRange: dateRangeSelect.value,
            startDate: startDate.value || null,
            endDate: endDate.value || null
        };
        console.log('Applying filters:', filters);
        // Here you would update the table with filtered data (e.g., via API or client-side filtering)
    }

    filterControls.forEach(control => {
        if (control.id !== 'startDate' && control.id !== 'endDate') {
            control.addEventListener('change', function() {
                applyFilters();
                checkFiltersApplied();
            });
        }
    });

    let searchTimeout;
    searchInput.addEventListener('input', function() {
        clearTimeout(searchTimeout);
        if (this.value.trim().length > 0) {
            clearSearchBtn.classList.add('active');
        } else {
            clearSearchBtn.classList.remove('active');
        }
        searchTimeout = setTimeout(() => {
            applyFilters();
            checkFiltersApplied();
        }, 300);
    });

    if (dateRangeSelect) {
        dateRangeSelect.addEventListener('change', function() {
            if (this.value === 'custom') {
                startDate.classList.remove('d-none');
                endDate.classList.remove('d-none');
            } else {
                startDate.classList.add('d-none');
                endDate.classList.add('d-none');
                applyFilters();
            }
            checkFiltersApplied();
        });
    }

    startDate.addEventListener('change', function() {
        if (endDate.value) applyFilters();
        checkFiltersApplied();
    });
    endDate.addEventListener('change', function() {
        if (startDate.value) applyFilters();
        checkFiltersApplied();
    });

    const priceInputs = document.querySelectorAll('#minPrice, #maxPrice');
    priceInputs.forEach(input => {
        let timeout;
        input.addEventListener('input', function() {
            clearTimeout(timeout);
            timeout = setTimeout(() => {
                applyFilters();
                checkFiltersApplied();
            }, 500);
        });
    });

    clearSearchBtn.addEventListener('click', function() {
        searchInput.value = '';
        this.classList.remove('active');
        applyFilters();
        checkFiltersApplied();
    });

    resetFiltersBtn.addEventListener('click', function() {
        searchInput.value = '';
        clearSearchBtn.classList.remove('active');
        filterControls.forEach(control => {
            if (control.tagName === 'SELECT') {
                if (control.id === 'dateRangeSelect') control.value = 'weekly';
                else control.value = 'all';
            } else if (control.tagName === 'INPUT') control.value = '';
        });
        startDate.classList.add('d-none');
        endDate.classList.add('d-none');
        applyFilters();
    });

    checkFiltersApplied();
    applyFilters();

    if (dateRangeSelect.value === 'custom') {
        startDate.classList.remove('d-none');
        endDate.classList.remove('d-none');
    }
});
</script>

 -->


 <script>
    async function fetchSales(page=1) {
    const search = document.getElementById("searchInput").value;
    const paymentType = document.getElementById('paymentFilter').value;
    const status = document.getElementById('statusFilter').value;
    const category = document.getElementById('categoryFilter').value;
    const brand = document.getElementById('brandFilter').value;
    const minPrice = document.getElementById("minPrice").value;
    const maxPrice = document.getElementById("maxPrice").value;
    const dateRange = document.getElementById('dateRangeSelect').value;
    const startDate = document.getElementById('startDate').value;
    const endDate = document.getElementById('endDate').value;
    
    console.log("Fetching sales with filters:", {
        page, search, paymentType, status, category, brand, 
        minPrice, maxPrice, dateRange, startDate, endDate
    });
    
    const queryParams = new URLSearchParams({
        page,
        search,
        paymentType,
        status,
        category,
        brand,
        minPrice,
        maxPrice,
        dateRange,
        startDate,
        endDate 
    }).toString();
    
    try {
        const response = await fetch(`/admin/sale?${queryParams}`,{
            headers:{'X-Requested-With': 'XMLHttpRequest'},
        });

        if(response.status === 401 || response.status === 403) {
            Swal.fire({
                icon: 'error',
                title: 'Unauthorized',
                text: 'Please log in to continue',
            }).then(() => {
                window.location.href = '/admin/login';
            });
            return;
        };
        const data = await response.json();

        if (!response.ok) {
            throw new Error(data.message || 'Failed to fetch sales');
        }

        console.log("API Response:", data);

        const tableBody = document.getElementById("tableBody");
        tableBody.innerHTML = '';

        if(data.sales?.length > 0) {
            data.sales.forEach((sale, index) => {
                const row = `
                <tr class="fade-in">
                    <td>${(data.page - 1) * data.limit + index + 1}</td>
                    <td>${sale.orderDate ? new Date(sale.orderDate).toLocaleDateString("en-US", { month: "long", day: "2-digit", year: "numeric" }) : 'N/A'}</td>
                    <td>
                    <a href="#" class="text-decoration-none order-id-link" data-bs-toggle="tooltip" title="${sale.orderId || 'Unknown'}">
                        ${sale.orderId || 'Unknown'}
                    </a>
                    </td>
                    <td>
                    <div>
                        <div class="fw-medium">${sale.customerName || 'Unknown'}</div>
                        <small class="text-muted">${sale.email || ''}</small>
                    </div>
                    </td>
                    <td><span class="text-muted">${sale.items?.length || 0} item${sale.items?.length !== 1 ? 's' : ''}</span></td>
                    <td><span class="badge bg-warning text-dark">${sale.paymentMethod || sale.paymentType || 'Unknown'}</span></td>
                    <td>₹${(sale.subtotal || 0).toFixed(2)}</td>
                    <td class="text-danger">₹${(sale.discount || 0).toFixed(2)}</td>
                    <td class="fw-bold">₹${(sale.total || 0).toFixed(2)}</td>
                    <td><span class="badge bg-${getStatusClass(sale.status)}">${sale.status || 'Unknown'}</span></td>
                    <td>
                    <button class="btn btn-sm btn-outline-info view-details" title="View details" data-id="${sale._id}">
                        <i class="fas fa-eye"></i>
                    </button>
                    </td>            
                </tr>
                `;
                tableBody.insertAdjacentHTML('beforeend', row);
            });
            function getStatusClass(status) {
            if (!status) return 'secondary';
            switch(status) {
                case 'Delivered': return 'success';
                case 'Cancelled': return 'danger';
                case 'Returned': return 'info';
                default: return 'warning';
            }
            }
            
            // Setup tooltips for order IDs
            const tooltips = document.querySelectorAll('[data-bs-toggle="tooltip"]');
            tooltips.forEach(tooltip => {
                new bootstrap.Tooltip(tooltip);
            });
            
            // Add event listeners to view detail buttons
            document.querySelectorAll('.view-details').forEach(btn => {
                btn.addEventListener('click', function() {
                    const orderId = this.getAttribute('data-id');
                    // Implement your view details logic here
                    console.log("View details for order:", orderId);
                });
            });
        } else {
            tableBody.innerHTML = `
                <tr>
                    <td colspan="11" class="text-center py-4">
                        <div class="d-flex flex-column align-items-center justify-content-center gap-3">
                            <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="text-muted">
                                <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
                                <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
                                <path d="M12 11v4" />
                                <path d="M12 17h.01" />
                            </svg>
                            <p class="fs-5 fw-medium text-muted">No items found</p>
                            <p class="text-muted">Try adjusting your search or filter to find what you're looking for.</p>
                        </div>
                    </td>
                </tr>
            `;
        }

        const paginationSection = document.getElementById("paginationSection");
        paginationSection.innerHTML = '';

        if(data.count > 0) {
            const totalPages = Math.ceil(data.count / data.limit);
            const maxPagesToShow = 5;
            const startPage = Math.max(1, data.page - Math.floor(maxPagesToShow / 2));
            const endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);

            const paginationHTML = `
                <div class="text-muted">
                    Showing <span class="fw-bold">${(data.page - 1) * data.limit + 1}</span>
                    to <span class="fw-bold">${Math.min(data.page * data.limit, data.count)}</span> 
                    of <span class="fw-bold">${data.count}</span> Orders
                </div>
                <nav aria-label="Page navigation">
                    <ul class="pagination mb-0">
                        <li class="page-item ${data.page <= 1 ? 'disabled' : ''}">
                            <a class="page-link" href="#" data-page="${data.page - 1}" aria-label="Previous">
                                <i class="fas fa-chevron-left"></i>
                            </a>
                        </li>
                        ${Array.from({ length: endPage - startPage + 1 }, (_, i) => startPage + i).map(i => `
                            <li class="page-item ${data.page === i ? 'active' : ''}">
                                <a class="page-link" href="#" data-page="${i}">${i}</a>
                            </li>
                        `).join('')}
                        <li class="page-item ${data.page >= totalPages ? 'disabled' : ''}">
                            <a class="page-link" href="#" data-page="${data.page + 1}" aria-label="Next">
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        </li>
                    </ul>
                </nav>
            `;

            paginationSection.innerHTML = paginationHTML;

            document.querySelectorAll('.pagination a[data-page]').forEach(link => {
                link.addEventListener('click', (e) => {
                    e.preventDefault();
                    const page = parseInt(link.getAttribute('data-page'));
                    if (page > 0 && page <= totalPages) fetchSales(page);
                });
            });
        }

    } catch (error) {
        console.error('Error fetching sales:', error);
        Swal.fire({ icon: 'error', title: 'Error', text: error.message || 'Failed to load sales' });   
    }
}

document.addEventListener("DOMContentLoaded", () => {
    const filterForm = document.getElementById("saleFilterForm");
    const clearFiltersBtn = document.getElementById('clearFilters');

    filterForm.addEventListener('submit', (e) => {
        e.preventDefault();
        fetchSales();
    });

    // All filter change listeners
    document.querySelectorAll('#statusFilter, #paymentFilter, #categoryFilter, #brandFilter, #dateRangeSelect').forEach(input => {
        input.addEventListener('change', () => {
            fetchSales(1);
            checkFilters();
        });
    });

    // Handle date range selection
    document.getElementById('dateRangeSelect').addEventListener('change', function() {
        const customDateSelected = this.value === 'custom';
        
        // Show/hide date inputs based on selection
        const startDateField = document.getElementById('startDate');
        const endDateField = document.getElementById('endDate');
        
        startDateField.classList.toggle('d-none', !customDateSelected);
        endDateField.classList.toggle('d-none', !customDateSelected);
        
        // Clear dates if not using custom date range
        if (!customDateSelected) {
            startDateField.value = '';
            endDateField.value = '';
        }
        
        fetchSales();
        checkFilters();
    });

    // Date inputs
    ['startDate', 'endDate'].forEach(id => {
        const dateInput = document.getElementById(id);
        if (dateInput) {
            dateInput.addEventListener("change", () => {
                fetchSales();
                checkFilters();
            });
        }
    });

    // Price inputs
    ['minPrice', 'maxPrice'].forEach(id => {
        const priceInput = document.getElementById(id);
        if (priceInput) {
            priceInput.addEventListener("input", () => {
                fetchSales();
                checkFilters();
            });
        }
    });

    // Search input
    document.getElementById("searchInput").addEventListener("input", () => {
        fetchSales();
        checkFilters();
    });

    if (clearFiltersBtn) {
        clearFiltersBtn.addEventListener('click', () => {
            document.getElementById('searchInput').value = '';
            document.getElementById('paymentFilter').value = 'All';
            document.getElementById('statusFilter').value = 'All';
            document.getElementById('categoryFilter').value = 'All';
            document.getElementById('brandFilter').value = 'all';
            document.getElementById('minPrice').value = '';
            document.getElementById('maxPrice').value = '';
            document.getElementById('dateRangeSelect').value = 'all';
            document.getElementById('startDate').value = '';
            document.getElementById('endDate').value = '';
            
            // Hide date fields
            document.getElementById('startDate').classList.add('d-none');
            document.getElementById('endDate').classList.add('d-none');

            fetchSales();
            checkFilters();
        });
    }

    function checkFilters() {
        const filtersActive = 
            document.getElementById('searchInput').value !== '' ||
            document.getElementById('paymentFilter').value !== 'All' ||
            document.getElementById('statusFilter').value !== 'All' ||
            document.getElementById('categoryFilter').value !== 'All' ||
            document.getElementById('brandFilter').value !== 'all' ||
            document.getElementById('minPrice').value !== '' ||
            document.getElementById('maxPrice').value !== '' ||
            document.getElementById('dateRangeSelect').value !== 'all' ||
            document.getElementById('startDate').value !== '' || 
            document.getElementById('endDate').value !== '';

        const clearFiltersBtn = document.getElementById('clearFilters');
        if (clearFiltersBtn) {
            if (filtersActive) {
                clearFiltersBtn.classList.remove('d-none');
            } else {
                clearFiltersBtn.classList.add('d-none');
            }
        }
    }

    // Initialize
    fetchSales();
    checkFilters();
});


 </script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.23/jspdf.plugin.autotable.min.js"></script>
<%- include("../../views/partial/admin/footer") %>


